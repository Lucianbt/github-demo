{
  "config": {
    "configFile": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\playwright.config.ts",
    "rootDir": "C:/Users/Cor Hazard/Documents/GitHub/github-demo/tests",
    "forbidOnly": false,
    "fullyParallel": true,
    "globalSetup": null,
    "globalTeardown": null,
    "globalTimeout": 0,
    "grep": {},
    "grepInvert": null,
    "maxFailures": 0,
    "metadata": {
      "actualWorkers": 12
    },
    "preserveOutput": "always",
    "reporter": [
      [
        "json"
      ]
    ],
    "reportSlowTests": {
      "max": 5,
      "threshold": 300000
    },
    "quiet": false,
    "projects": [
      {
        "outputDir": "C:/Users/Cor Hazard/Documents/GitHub/github-demo/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 12
        },
        "id": "chromium",
        "name": "chromium",
        "testDir": "C:/Users/Cor Hazard/Documents/GitHub/github-demo/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "C:/Users/Cor Hazard/Documents/GitHub/github-demo/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 12
        },
        "id": "firefox",
        "name": "firefox",
        "testDir": "C:/Users/Cor Hazard/Documents/GitHub/github-demo/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "C:/Users/Cor Hazard/Documents/GitHub/github-demo/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 12
        },
        "id": "webkit",
        "name": "webkit",
        "testDir": "C:/Users/Cor Hazard/Documents/GitHub/github-demo/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 30000
      }
    ],
    "shard": null,
    "updateSnapshots": "missing",
    "updateSourceMethod": "patch",
    "version": "1.56.0",
    "workers": 12,
    "webServer": null
  },
  "suites": [
    {
      "title": "numeprenume.spec.ts",
      "file": "numeprenume.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Nume and Prenume field validation",
          "file": "numeprenume.spec.ts",
          "line": 43,
          "column": 6,
          "specs": [],
          "suites": [
            {
              "title": "Nume field",
              "file": "numeprenume.spec.ts",
              "line": 68,
              "column": 8,
              "specs": [
                {
                  "title": "nume valid: \"A\"",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 0,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 7131,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m30\u001b[39m\nReceived: \u001b[31m8\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m30\u001b[39m\nReceived: \u001b[31m8\u001b[39m\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:96:33",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 33,
                              "line": 96
                            },
                            "snippet": "\u001b[0m \u001b[90m 94 |\u001b[39m         \u001b[36mconst\u001b[39m maxAttr \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m numeField\u001b[33m.\u001b[39mgetAttribute(\u001b[32m'maxlength'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 95 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mmaxAttr) \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'missing maxlength attribute on nume field'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 96 |\u001b[39m         expect(\u001b[33mNumber\u001b[39m(maxAttr))\u001b[33m.\u001b[39mtoBe(\u001b[35m30\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 97 |\u001b[39m         \u001b[36mconst\u001b[39m actual \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m numeField\u001b[33m.\u001b[39minputValue()\u001b[33m;\u001b[39m\n \u001b[90m 98 |\u001b[39m         \u001b[36mif\u001b[39m (actual\u001b[33m.\u001b[39mlength \u001b[33m!==\u001b[39m value\u001b[33m.\u001b[39mlength) \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`nume input was truncated or modified ('${value}' -> '${actual}')`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 99 |\u001b[39m         \u001b[90m// Click Trimite to trigger validation\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 33,
                                "line": 96
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m30\u001b[39m\nReceived: \u001b[31m8\u001b[39m\n\n  94 |         const maxAttr = await numeField.getAttribute('maxlength');\n  95 |         if (!maxAttr) throw new Error('missing maxlength attribute on nume field');\n> 96 |         expect(Number(maxAttr)).toBe(30);\n     |                                 ^\n  97 |         const actual = await numeField.inputValue();\n  98 |         if (actual.length !== value.length) throw new Error(`nume input was truncated or modified ('${value}' -> '${actual}')`);\n  99 |         // Click Trimite to trigger validation\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:96:33"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:49:41.806Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-cc3d1-on-Nume-field-nume-valid-A--chromium\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 33,
                            "line": 96
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-da422b59ed711f6d8b30",
                  "file": "numeprenume.spec.ts",
                  "line": 88,
                  "column": 11
                },
                {
                  "title": "nume valid: \"BBBBBBBBBBBBBBBBBBBBBBBBBBBBB\"",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 1,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 7655,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m30\u001b[39m\nReceived: \u001b[31m8\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m30\u001b[39m\nReceived: \u001b[31m8\u001b[39m\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:96:33",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 33,
                              "line": 96
                            },
                            "snippet": "\u001b[0m \u001b[90m 94 |\u001b[39m         \u001b[36mconst\u001b[39m maxAttr \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m numeField\u001b[33m.\u001b[39mgetAttribute(\u001b[32m'maxlength'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 95 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mmaxAttr) \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'missing maxlength attribute on nume field'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 96 |\u001b[39m         expect(\u001b[33mNumber\u001b[39m(maxAttr))\u001b[33m.\u001b[39mtoBe(\u001b[35m30\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 97 |\u001b[39m         \u001b[36mconst\u001b[39m actual \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m numeField\u001b[33m.\u001b[39minputValue()\u001b[33m;\u001b[39m\n \u001b[90m 98 |\u001b[39m         \u001b[36mif\u001b[39m (actual\u001b[33m.\u001b[39mlength \u001b[33m!==\u001b[39m value\u001b[33m.\u001b[39mlength) \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`nume input was truncated or modified ('${value}' -> '${actual}')`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 99 |\u001b[39m         \u001b[90m// Click Trimite to trigger validation\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 33,
                                "line": 96
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m30\u001b[39m\nReceived: \u001b[31m8\u001b[39m\n\n  94 |         const maxAttr = await numeField.getAttribute('maxlength');\n  95 |         if (!maxAttr) throw new Error('missing maxlength attribute on nume field');\n> 96 |         expect(Number(maxAttr)).toBe(30);\n     |                                 ^\n  97 |         const actual = await numeField.inputValue();\n  98 |         if (actual.length !== value.length) throw new Error(`nume input was truncated or modified ('${value}' -> '${actual}')`);\n  99 |         // Click Trimite to trigger validation\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:96:33"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:49:41.816Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-f6975-BBBBBBBBBBBBBBBBBBBBBBBBBB--chromium\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 33,
                            "line": 96
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-0affe726f725cb2d7645",
                  "file": "numeprenume.spec.ts",
                  "line": 88,
                  "column": 11
                },
                {
                  "title": "nume valid: \"CCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 2,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 7029,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m30\u001b[39m\nReceived: \u001b[31m8\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m30\u001b[39m\nReceived: \u001b[31m8\u001b[39m\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:96:33",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 33,
                              "line": 96
                            },
                            "snippet": "\u001b[0m \u001b[90m 94 |\u001b[39m         \u001b[36mconst\u001b[39m maxAttr \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m numeField\u001b[33m.\u001b[39mgetAttribute(\u001b[32m'maxlength'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 95 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mmaxAttr) \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'missing maxlength attribute on nume field'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 96 |\u001b[39m         expect(\u001b[33mNumber\u001b[39m(maxAttr))\u001b[33m.\u001b[39mtoBe(\u001b[35m30\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 97 |\u001b[39m         \u001b[36mconst\u001b[39m actual \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m numeField\u001b[33m.\u001b[39minputValue()\u001b[33m;\u001b[39m\n \u001b[90m 98 |\u001b[39m         \u001b[36mif\u001b[39m (actual\u001b[33m.\u001b[39mlength \u001b[33m!==\u001b[39m value\u001b[33m.\u001b[39mlength) \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`nume input was truncated or modified ('${value}' -> '${actual}')`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 99 |\u001b[39m         \u001b[90m// Click Trimite to trigger validation\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 33,
                                "line": 96
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m30\u001b[39m\nReceived: \u001b[31m8\u001b[39m\n\n  94 |         const maxAttr = await numeField.getAttribute('maxlength');\n  95 |         if (!maxAttr) throw new Error('missing maxlength attribute on nume field');\n> 96 |         expect(Number(maxAttr)).toBe(30);\n     |                                 ^\n  97 |         const actual = await numeField.inputValue();\n  98 |         if (actual.length !== value.length) throw new Error(`nume input was truncated or modified ('${value}' -> '${actual}')`);\n  99 |         // Click Trimite to trigger validation\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:96:33"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:49:41.811Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-ea159-CCCCCCCCCCCCCCCCCCCCCCCCCC--chromium\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 33,
                            "line": 96
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-93b8320a6952d5eeff94",
                  "file": "numeprenume.spec.ts",
                  "line": 88,
                  "column": 11
                },
                {
                  "title": "nume valid: \"Z\"",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 3,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 6666,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m30\u001b[39m\nReceived: \u001b[31m8\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m30\u001b[39m\nReceived: \u001b[31m8\u001b[39m\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:96:33",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 33,
                              "line": 96
                            },
                            "snippet": "\u001b[0m \u001b[90m 94 |\u001b[39m         \u001b[36mconst\u001b[39m maxAttr \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m numeField\u001b[33m.\u001b[39mgetAttribute(\u001b[32m'maxlength'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 95 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mmaxAttr) \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'missing maxlength attribute on nume field'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 96 |\u001b[39m         expect(\u001b[33mNumber\u001b[39m(maxAttr))\u001b[33m.\u001b[39mtoBe(\u001b[35m30\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 97 |\u001b[39m         \u001b[36mconst\u001b[39m actual \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m numeField\u001b[33m.\u001b[39minputValue()\u001b[33m;\u001b[39m\n \u001b[90m 98 |\u001b[39m         \u001b[36mif\u001b[39m (actual\u001b[33m.\u001b[39mlength \u001b[33m!==\u001b[39m value\u001b[33m.\u001b[39mlength) \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`nume input was truncated or modified ('${value}' -> '${actual}')`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 99 |\u001b[39m         \u001b[90m// Click Trimite to trigger validation\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 33,
                                "line": 96
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m30\u001b[39m\nReceived: \u001b[31m8\u001b[39m\n\n  94 |         const maxAttr = await numeField.getAttribute('maxlength');\n  95 |         if (!maxAttr) throw new Error('missing maxlength attribute on nume field');\n> 96 |         expect(Number(maxAttr)).toBe(30);\n     |                                 ^\n  97 |         const actual = await numeField.inputValue();\n  98 |         if (actual.length !== value.length) throw new Error(`nume input was truncated or modified ('${value}' -> '${actual}')`);\n  99 |         // Click Trimite to trigger validation\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:96:33"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:49:41.811Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-80e2b-on-Nume-field-nume-valid-Z--chromium\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 33,
                            "line": 96
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-f476741a281061b5978f",
                  "file": "numeprenume.spec.ts",
                  "line": 88,
                  "column": 11
                },
                {
                  "title": "nume invalid: lowercase (\"a\")",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 4,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 10971,
                          "error": {
                            "message": "Error: bug present: invalid value 'a' does NOT trigger red outline",
                            "stack": "Error: bug present: invalid value 'a' does NOT trigger red outline\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:121:17",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 17,
                              "line": 121
                            },
                            "snippet": "\u001b[0m \u001b[90m 119 |\u001b[39m         \u001b[36mconst\u001b[39m hasError \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m hasRedOutline(page\u001b[33m,\u001b[39m \u001b[32m'nume'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 120 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mhasError) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 121 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`bug present: invalid value '${value}' does NOT trigger red outline`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 122 |\u001b[39m         }\n \u001b[90m 123 |\u001b[39m         expect(hasError)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 124 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 17,
                                "line": 121
                              },
                              "message": "Error: bug present: invalid value 'a' does NOT trigger red outline\n\n  119 |         const hasError = await hasRedOutline(page, 'nume');\n  120 |         if (!hasError) {\n> 121 |           throw new Error(`bug present: invalid value '${value}' does NOT trigger red outline`);\n      |                 ^\n  122 |         }\n  123 |         expect(hasError).toBe(true);\n  124 |       });\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:121:17"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:49:41.847Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-e3976-d-nume-invalid-lowercase-a--chromium\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 17,
                            "line": 121
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-c59969d02111eb315b1f",
                  "file": "numeprenume.spec.ts",
                  "line": 111,
                  "column": 11
                },
                {
                  "title": "nume invalid: lowercase (\"z\")",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 5,
                          "parallelIndex": 5,
                          "status": "failed",
                          "duration": 8919,
                          "error": {
                            "message": "Error: bug present: invalid value 'z' does NOT trigger red outline",
                            "stack": "Error: bug present: invalid value 'z' does NOT trigger red outline\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:121:17",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 17,
                              "line": 121
                            },
                            "snippet": "\u001b[0m \u001b[90m 119 |\u001b[39m         \u001b[36mconst\u001b[39m hasError \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m hasRedOutline(page\u001b[33m,\u001b[39m \u001b[32m'nume'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 120 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mhasError) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 121 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`bug present: invalid value '${value}' does NOT trigger red outline`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 122 |\u001b[39m         }\n \u001b[90m 123 |\u001b[39m         expect(hasError)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 124 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 17,
                                "line": 121
                              },
                              "message": "Error: bug present: invalid value 'z' does NOT trigger red outline\n\n  119 |         const hasError = await hasRedOutline(page, 'nume');\n  120 |         if (!hasError) {\n> 121 |           throw new Error(`bug present: invalid value '${value}' does NOT trigger red outline`);\n      |                 ^\n  122 |         }\n  123 |         expect(hasError).toBe(true);\n  124 |       });\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:121:17"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:49:41.840Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-e98e0-d-nume-invalid-lowercase-z--chromium\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 17,
                            "line": 121
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-752d42f66e88a1191784",
                  "file": "numeprenume.spec.ts",
                  "line": 111,
                  "column": 11
                },
                {
                  "title": "nume invalid: diacritic (\"├ó\")",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 6,
                          "parallelIndex": 6,
                          "status": "failed",
                          "duration": 10613,
                          "error": {
                            "message": "Error: bug present: invalid value '├ó' does NOT trigger red outline",
                            "stack": "Error: bug present: invalid value '├ó' does NOT trigger red outline\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:121:17",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 17,
                              "line": 121
                            },
                            "snippet": "\u001b[0m \u001b[90m 119 |\u001b[39m         \u001b[36mconst\u001b[39m hasError \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m hasRedOutline(page\u001b[33m,\u001b[39m \u001b[32m'nume'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 120 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mhasError) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 121 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`bug present: invalid value '${value}' does NOT trigger red outline`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 122 |\u001b[39m         }\n \u001b[90m 123 |\u001b[39m         expect(hasError)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 124 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 17,
                                "line": 121
                              },
                              "message": "Error: bug present: invalid value '├ó' does NOT trigger red outline\n\n  119 |         const hasError = await hasRedOutline(page, 'nume');\n  120 |         if (!hasError) {\n> 121 |           throw new Error(`bug present: invalid value '${value}' does NOT trigger red outline`);\n      |                 ^\n  122 |         }\n  123 |         expect(hasError).toBe(true);\n  124 |       });\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:121:17"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:49:41.926Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-4194f-d-nume-invalid-diacritic-├ó--chromium\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 17,
                            "line": 121
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-afe00490d92bb2774bf3",
                  "file": "numeprenume.spec.ts",
                  "line": 111,
                  "column": 11
                },
                {
                  "title": "nume invalid: space (\" \")",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 7,
                          "parallelIndex": 7,
                          "status": "failed",
                          "duration": 9939,
                          "error": {
                            "message": "Error: bug present: invalid value ' ' does NOT trigger red outline",
                            "stack": "Error: bug present: invalid value ' ' does NOT trigger red outline\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:121:17",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 17,
                              "line": 121
                            },
                            "snippet": "\u001b[0m \u001b[90m 119 |\u001b[39m         \u001b[36mconst\u001b[39m hasError \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m hasRedOutline(page\u001b[33m,\u001b[39m \u001b[32m'nume'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 120 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mhasError) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 121 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`bug present: invalid value '${value}' does NOT trigger red outline`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 122 |\u001b[39m         }\n \u001b[90m 123 |\u001b[39m         expect(hasError)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 124 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 17,
                                "line": 121
                              },
                              "message": "Error: bug present: invalid value ' ' does NOT trigger red outline\n\n  119 |         const hasError = await hasRedOutline(page, 'nume');\n  120 |         if (!hasError) {\n> 121 |           throw new Error(`bug present: invalid value '${value}' does NOT trigger red outline`);\n      |                 ^\n  122 |         }\n  123 |         expect(hasError).toBe(true);\n  124 |       });\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:121:17"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:49:41.837Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-97a91-e-field-nume-invalid-space--chromium\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 17,
                            "line": 121
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-228c14063728cbf2b046",
                  "file": "numeprenume.spec.ts",
                  "line": 111,
                  "column": 11
                },
                {
                  "title": "nume invalid: empty (\"\")",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 8,
                          "parallelIndex": 8,
                          "status": "failed",
                          "duration": 10946,
                          "error": {
                            "message": "Error: bug present: invalid value '' does NOT trigger red outline",
                            "stack": "Error: bug present: invalid value '' does NOT trigger red outline\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:121:17",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 17,
                              "line": 121
                            },
                            "snippet": "\u001b[0m \u001b[90m 119 |\u001b[39m         \u001b[36mconst\u001b[39m hasError \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m hasRedOutline(page\u001b[33m,\u001b[39m \u001b[32m'nume'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 120 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mhasError) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 121 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`bug present: invalid value '${value}' does NOT trigger red outline`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 122 |\u001b[39m         }\n \u001b[90m 123 |\u001b[39m         expect(hasError)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 124 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 17,
                                "line": 121
                              },
                              "message": "Error: bug present: invalid value '' does NOT trigger red outline\n\n  119 |         const hasError = await hasRedOutline(page, 'nume');\n  120 |         if (!hasError) {\n> 121 |           throw new Error(`bug present: invalid value '${value}' does NOT trigger red outline`);\n      |                 ^\n  122 |         }\n  123 |         expect(hasError).toBe(true);\n  124 |       });\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:121:17"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:49:41.941Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-c0f37-e-field-nume-invalid-empty--chromium\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 17,
                            "line": 121
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-c90cea065f0ee571b410",
                  "file": "numeprenume.spec.ts",
                  "line": 111,
                  "column": 11
                },
                {
                  "title": "nume invalid: digit (\"3\")",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 9,
                          "parallelIndex": 9,
                          "status": "failed",
                          "duration": 9751,
                          "error": {
                            "message": "Error: bug present: invalid value '3' does NOT trigger red outline",
                            "stack": "Error: bug present: invalid value '3' does NOT trigger red outline\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:121:17",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 17,
                              "line": 121
                            },
                            "snippet": "\u001b[0m \u001b[90m 119 |\u001b[39m         \u001b[36mconst\u001b[39m hasError \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m hasRedOutline(page\u001b[33m,\u001b[39m \u001b[32m'nume'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 120 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mhasError) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 121 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`bug present: invalid value '${value}' does NOT trigger red outline`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 122 |\u001b[39m         }\n \u001b[90m 123 |\u001b[39m         expect(hasError)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 124 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 17,
                                "line": 121
                              },
                              "message": "Error: bug present: invalid value '3' does NOT trigger red outline\n\n  119 |         const hasError = await hasRedOutline(page, 'nume');\n  120 |         if (!hasError) {\n> 121 |           throw new Error(`bug present: invalid value '${value}' does NOT trigger red outline`);\n      |                 ^\n  122 |         }\n  123 |         expect(hasError).toBe(true);\n  124 |       });\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:121:17"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:49:42.369Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-7b4b9-field-nume-invalid-digit-3--chromium\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 17,
                            "line": 121
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-185d6fb24ce19195a777",
                  "file": "numeprenume.spec.ts",
                  "line": 111,
                  "column": 11
                },
                {
                  "title": "nume invalid: symbol (\"!\")",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 10,
                          "parallelIndex": 10,
                          "status": "failed",
                          "duration": 9736,
                          "error": {
                            "message": "Error: bug present: invalid value '!' does NOT trigger red outline",
                            "stack": "Error: bug present: invalid value '!' does NOT trigger red outline\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:121:17",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 17,
                              "line": 121
                            },
                            "snippet": "\u001b[0m \u001b[90m 119 |\u001b[39m         \u001b[36mconst\u001b[39m hasError \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m hasRedOutline(page\u001b[33m,\u001b[39m \u001b[32m'nume'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 120 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mhasError) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 121 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`bug present: invalid value '${value}' does NOT trigger red outline`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 122 |\u001b[39m         }\n \u001b[90m 123 |\u001b[39m         expect(hasError)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 124 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 17,
                                "line": 121
                              },
                              "message": "Error: bug present: invalid value '!' does NOT trigger red outline\n\n  119 |         const hasError = await hasRedOutline(page, 'nume');\n  120 |         if (!hasError) {\n> 121 |           throw new Error(`bug present: invalid value '${value}' does NOT trigger red outline`);\n      |                 ^\n  122 |         }\n  123 |         expect(hasError).toBe(true);\n  124 |       });\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:121:17"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:49:42.529Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-49cc9--field-nume-invalid-symbol--chromium\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 17,
                            "line": 121
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-f6c77f087cfe82ecb72d",
                  "file": "numeprenume.spec.ts",
                  "line": 111,
                  "column": 11
                },
                {
                  "title": "nume invalid: too long (\"DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD\")",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 11,
                          "parallelIndex": 11,
                          "status": "failed",
                          "duration": 11646,
                          "error": {
                            "message": "Error: bug present: invalid value 'DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD' does NOT trigger red outline",
                            "stack": "Error: bug present: invalid value 'DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD' does NOT trigger red outline\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:121:17",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 17,
                              "line": 121
                            },
                            "snippet": "\u001b[0m \u001b[90m 119 |\u001b[39m         \u001b[36mconst\u001b[39m hasError \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m hasRedOutline(page\u001b[33m,\u001b[39m \u001b[32m'nume'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 120 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mhasError) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 121 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`bug present: invalid value '${value}' does NOT trigger red outline`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 122 |\u001b[39m         }\n \u001b[90m 123 |\u001b[39m         expect(hasError)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 124 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 17,
                                "line": 121
                              },
                              "message": "Error: bug present: invalid value 'DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD' does NOT trigger red outline\n\n  119 |         const hasError = await hasRedOutline(page, 'nume');\n  120 |         if (!hasError) {\n> 121 |           throw new Error(`bug present: invalid value '${value}' does NOT trigger red outline`);\n      |                 ^\n  122 |         }\n  123 |         expect(hasError).toBe(true);\n  124 |       });\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:121:17"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:49:42.526Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-a4f63-DDDDDDDDDDDDDDDDDDDDDDDDDD--chromium\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 17,
                            "line": 121
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-1beaff4381a8c687dcc8",
                  "file": "numeprenume.spec.ts",
                  "line": 111,
                  "column": 11
                },
                {
                  "title": "nume valid: \"A\"",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 23,
                          "parallelIndex": 11,
                          "status": "failed",
                          "duration": 6691,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m30\u001b[39m\nReceived: \u001b[31m8\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m30\u001b[39m\nReceived: \u001b[31m8\u001b[39m\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:96:33",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 33,
                              "line": 96
                            },
                            "snippet": "\u001b[0m \u001b[90m 94 |\u001b[39m         \u001b[36mconst\u001b[39m maxAttr \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m numeField\u001b[33m.\u001b[39mgetAttribute(\u001b[32m'maxlength'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 95 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mmaxAttr) \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'missing maxlength attribute on nume field'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 96 |\u001b[39m         expect(\u001b[33mNumber\u001b[39m(maxAttr))\u001b[33m.\u001b[39mtoBe(\u001b[35m30\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 97 |\u001b[39m         \u001b[36mconst\u001b[39m actual \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m numeField\u001b[33m.\u001b[39minputValue()\u001b[33m;\u001b[39m\n \u001b[90m 98 |\u001b[39m         \u001b[36mif\u001b[39m (actual\u001b[33m.\u001b[39mlength \u001b[33m!==\u001b[39m value\u001b[33m.\u001b[39mlength) \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`nume input was truncated or modified ('${value}' -> '${actual}')`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 99 |\u001b[39m         \u001b[90m// Click Trimite to trigger validation\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 33,
                                "line": 96
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m30\u001b[39m\nReceived: \u001b[31m8\u001b[39m\n\n  94 |         const maxAttr = await numeField.getAttribute('maxlength');\n  95 |         if (!maxAttr) throw new Error('missing maxlength attribute on nume field');\n> 96 |         expect(Number(maxAttr)).toBe(30);\n     |                                 ^\n  97 |         const actual = await numeField.inputValue();\n  98 |         if (actual.length !== value.length) throw new Error(`nume input was truncated or modified ('${value}' -> '${actual}')`);\n  99 |         // Click Trimite to trigger validation\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:96:33"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:49:55.486Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-cc3d1-on-Nume-field-nume-valid-A--firefox\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 33,
                            "line": 96
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-a0b9fb18dd2e1b976cc4",
                  "file": "numeprenume.spec.ts",
                  "line": 88,
                  "column": 11
                },
                {
                  "title": "nume valid: \"BBBBBBBBBBBBBBBBBBBBBBBBBBBBB\"",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 24,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 6500,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m30\u001b[39m\nReceived: \u001b[31m8\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m30\u001b[39m\nReceived: \u001b[31m8\u001b[39m\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:96:33",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 33,
                              "line": 96
                            },
                            "snippet": "\u001b[0m \u001b[90m 94 |\u001b[39m         \u001b[36mconst\u001b[39m maxAttr \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m numeField\u001b[33m.\u001b[39mgetAttribute(\u001b[32m'maxlength'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 95 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mmaxAttr) \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'missing maxlength attribute on nume field'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 96 |\u001b[39m         expect(\u001b[33mNumber\u001b[39m(maxAttr))\u001b[33m.\u001b[39mtoBe(\u001b[35m30\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 97 |\u001b[39m         \u001b[36mconst\u001b[39m actual \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m numeField\u001b[33m.\u001b[39minputValue()\u001b[33m;\u001b[39m\n \u001b[90m 98 |\u001b[39m         \u001b[36mif\u001b[39m (actual\u001b[33m.\u001b[39mlength \u001b[33m!==\u001b[39m value\u001b[33m.\u001b[39mlength) \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`nume input was truncated or modified ('${value}' -> '${actual}')`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 99 |\u001b[39m         \u001b[90m// Click Trimite to trigger validation\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 33,
                                "line": 96
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m30\u001b[39m\nReceived: \u001b[31m8\u001b[39m\n\n  94 |         const maxAttr = await numeField.getAttribute('maxlength');\n  95 |         if (!maxAttr) throw new Error('missing maxlength attribute on nume field');\n> 96 |         expect(Number(maxAttr)).toBe(30);\n     |                                 ^\n  97 |         const actual = await numeField.inputValue();\n  98 |         if (actual.length !== value.length) throw new Error(`nume input was truncated or modified ('${value}' -> '${actual}')`);\n  99 |         // Click Trimite to trigger validation\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:96:33"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:49:57.134Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-f6975-BBBBBBBBBBBBBBBBBBBBBBBBBB--firefox\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 33,
                            "line": 96
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-26200238f474dbec10db",
                  "file": "numeprenume.spec.ts",
                  "line": 88,
                  "column": 11
                },
                {
                  "title": "nume valid: \"CCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 25,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 6349,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m30\u001b[39m\nReceived: \u001b[31m8\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m30\u001b[39m\nReceived: \u001b[31m8\u001b[39m\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:96:33",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 33,
                              "line": 96
                            },
                            "snippet": "\u001b[0m \u001b[90m 94 |\u001b[39m         \u001b[36mconst\u001b[39m maxAttr \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m numeField\u001b[33m.\u001b[39mgetAttribute(\u001b[32m'maxlength'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 95 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mmaxAttr) \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'missing maxlength attribute on nume field'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 96 |\u001b[39m         expect(\u001b[33mNumber\u001b[39m(maxAttr))\u001b[33m.\u001b[39mtoBe(\u001b[35m30\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 97 |\u001b[39m         \u001b[36mconst\u001b[39m actual \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m numeField\u001b[33m.\u001b[39minputValue()\u001b[33m;\u001b[39m\n \u001b[90m 98 |\u001b[39m         \u001b[36mif\u001b[39m (actual\u001b[33m.\u001b[39mlength \u001b[33m!==\u001b[39m value\u001b[33m.\u001b[39mlength) \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`nume input was truncated or modified ('${value}' -> '${actual}')`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 99 |\u001b[39m         \u001b[90m// Click Trimite to trigger validation\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 33,
                                "line": 96
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m30\u001b[39m\nReceived: \u001b[31m8\u001b[39m\n\n  94 |         const maxAttr = await numeField.getAttribute('maxlength');\n  95 |         if (!maxAttr) throw new Error('missing maxlength attribute on nume field');\n> 96 |         expect(Number(maxAttr)).toBe(30);\n     |                                 ^\n  97 |         const actual = await numeField.inputValue();\n  98 |         if (actual.length !== value.length) throw new Error(`nume input was truncated or modified ('${value}' -> '${actual}')`);\n  99 |         // Click Trimite to trigger validation\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:96:33"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:49:57.259Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-ea159-CCCCCCCCCCCCCCCCCCCCCCCCCC--firefox\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 33,
                            "line": 96
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-1c64ff0fac57dcd83a1d",
                  "file": "numeprenume.spec.ts",
                  "line": 88,
                  "column": 11
                },
                {
                  "title": "nume valid: \"Z\"",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 26,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 6467,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m30\u001b[39m\nReceived: \u001b[31m8\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m30\u001b[39m\nReceived: \u001b[31m8\u001b[39m\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:96:33",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 33,
                              "line": 96
                            },
                            "snippet": "\u001b[0m \u001b[90m 94 |\u001b[39m         \u001b[36mconst\u001b[39m maxAttr \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m numeField\u001b[33m.\u001b[39mgetAttribute(\u001b[32m'maxlength'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 95 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mmaxAttr) \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'missing maxlength attribute on nume field'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 96 |\u001b[39m         expect(\u001b[33mNumber\u001b[39m(maxAttr))\u001b[33m.\u001b[39mtoBe(\u001b[35m30\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 97 |\u001b[39m         \u001b[36mconst\u001b[39m actual \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m numeField\u001b[33m.\u001b[39minputValue()\u001b[33m;\u001b[39m\n \u001b[90m 98 |\u001b[39m         \u001b[36mif\u001b[39m (actual\u001b[33m.\u001b[39mlength \u001b[33m!==\u001b[39m value\u001b[33m.\u001b[39mlength) \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`nume input was truncated or modified ('${value}' -> '${actual}')`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 99 |\u001b[39m         \u001b[90m// Click Trimite to trigger validation\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 33,
                                "line": 96
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m30\u001b[39m\nReceived: \u001b[31m8\u001b[39m\n\n  94 |         const maxAttr = await numeField.getAttribute('maxlength');\n  95 |         if (!maxAttr) throw new Error('missing maxlength attribute on nume field');\n> 96 |         expect(Number(maxAttr)).toBe(30);\n     |                                 ^\n  97 |         const actual = await numeField.inputValue();\n  98 |         if (actual.length !== value.length) throw new Error(`nume input was truncated or modified ('${value}' -> '${actual}')`);\n  99 |         // Click Trimite to trigger validation\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:96:33"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:49:57.399Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-80e2b-on-Nume-field-nume-valid-Z--firefox\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 33,
                            "line": 96
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-d6e4bcd686ed57b2f53c",
                  "file": "numeprenume.spec.ts",
                  "line": 88,
                  "column": 11
                },
                {
                  "title": "nume invalid: lowercase (\"a\")",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 27,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 8264,
                          "error": {
                            "message": "Error: bug present: invalid value 'a' does NOT trigger red outline",
                            "stack": "Error: bug present: invalid value 'a' does NOT trigger red outline\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:121:17",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 17,
                              "line": 121
                            },
                            "snippet": "\u001b[0m \u001b[90m 119 |\u001b[39m         \u001b[36mconst\u001b[39m hasError \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m hasRedOutline(page\u001b[33m,\u001b[39m \u001b[32m'nume'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 120 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mhasError) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 121 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`bug present: invalid value '${value}' does NOT trigger red outline`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 122 |\u001b[39m         }\n \u001b[90m 123 |\u001b[39m         expect(hasError)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 124 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 17,
                                "line": 121
                              },
                              "message": "Error: bug present: invalid value 'a' does NOT trigger red outline\n\n  119 |         const hasError = await hasRedOutline(page, 'nume');\n  120 |         if (!hasError) {\n> 121 |           throw new Error(`bug present: invalid value '${value}' does NOT trigger red outline`);\n      |                 ^\n  122 |         }\n  123 |         expect(hasError).toBe(true);\n  124 |       });\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:121:17"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:49:58.486Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-e3976-d-nume-invalid-lowercase-a--firefox\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 17,
                            "line": 121
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-169e9693e1cc3882ddd9",
                  "file": "numeprenume.spec.ts",
                  "line": 111,
                  "column": 11
                },
                {
                  "title": "nume invalid: lowercase (\"z\")",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 28,
                          "parallelIndex": 5,
                          "status": "failed",
                          "duration": 7902,
                          "error": {
                            "message": "Error: bug present: invalid value 'z' does NOT trigger red outline",
                            "stack": "Error: bug present: invalid value 'z' does NOT trigger red outline\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:121:17",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 17,
                              "line": 121
                            },
                            "snippet": "\u001b[0m \u001b[90m 119 |\u001b[39m         \u001b[36mconst\u001b[39m hasError \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m hasRedOutline(page\u001b[33m,\u001b[39m \u001b[32m'nume'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 120 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mhasError) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 121 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`bug present: invalid value '${value}' does NOT trigger red outline`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 122 |\u001b[39m         }\n \u001b[90m 123 |\u001b[39m         expect(hasError)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 124 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 17,
                                "line": 121
                              },
                              "message": "Error: bug present: invalid value 'z' does NOT trigger red outline\n\n  119 |         const hasError = await hasRedOutline(page, 'nume');\n  120 |         if (!hasError) {\n> 121 |           throw new Error(`bug present: invalid value '${value}' does NOT trigger red outline`);\n      |                 ^\n  122 |         }\n  123 |         expect(hasError).toBe(true);\n  124 |       });\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:121:17"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:49:59.733Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-e98e0-d-nume-invalid-lowercase-z--firefox\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 17,
                            "line": 121
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-cf87d6dd7a61adda1aad",
                  "file": "numeprenume.spec.ts",
                  "line": 111,
                  "column": 11
                },
                {
                  "title": "nume invalid: diacritic (\"├ó\")",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 29,
                          "parallelIndex": 8,
                          "status": "failed",
                          "duration": 7648,
                          "error": {
                            "message": "Error: bug present: invalid value '├ó' does NOT trigger red outline",
                            "stack": "Error: bug present: invalid value '├ó' does NOT trigger red outline\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:121:17",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 17,
                              "line": 121
                            },
                            "snippet": "\u001b[0m \u001b[90m 119 |\u001b[39m         \u001b[36mconst\u001b[39m hasError \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m hasRedOutline(page\u001b[33m,\u001b[39m \u001b[32m'nume'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 120 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mhasError) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 121 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`bug present: invalid value '${value}' does NOT trigger red outline`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 122 |\u001b[39m         }\n \u001b[90m 123 |\u001b[39m         expect(hasError)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 124 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 17,
                                "line": 121
                              },
                              "message": "Error: bug present: invalid value '├ó' does NOT trigger red outline\n\n  119 |         const hasError = await hasRedOutline(page, 'nume');\n  120 |         if (!hasError) {\n> 121 |           throw new Error(`bug present: invalid value '${value}' does NOT trigger red outline`);\n      |                 ^\n  122 |         }\n  123 |         expect(hasError).toBe(true);\n  124 |       });\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:121:17"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:50:03.352Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-4194f-d-nume-invalid-diacritic-├ó--firefox\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 17,
                            "line": 121
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-578bc08e0ab4762e9a33",
                  "file": "numeprenume.spec.ts",
                  "line": 111,
                  "column": 11
                },
                {
                  "title": "nume invalid: space (\" \")",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 30,
                          "parallelIndex": 7,
                          "status": "failed",
                          "duration": 8061,
                          "error": {
                            "message": "Error: bug present: invalid value ' ' does NOT trigger red outline",
                            "stack": "Error: bug present: invalid value ' ' does NOT trigger red outline\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:121:17",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 17,
                              "line": 121
                            },
                            "snippet": "\u001b[0m \u001b[90m 119 |\u001b[39m         \u001b[36mconst\u001b[39m hasError \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m hasRedOutline(page\u001b[33m,\u001b[39m \u001b[32m'nume'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 120 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mhasError) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 121 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`bug present: invalid value '${value}' does NOT trigger red outline`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 122 |\u001b[39m         }\n \u001b[90m 123 |\u001b[39m         expect(hasError)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 124 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 17,
                                "line": 121
                              },
                              "message": "Error: bug present: invalid value ' ' does NOT trigger red outline\n\n  119 |         const hasError = await hasRedOutline(page, 'nume');\n  120 |         if (!hasError) {\n> 121 |           throw new Error(`bug present: invalid value '${value}' does NOT trigger red outline`);\n      |                 ^\n  122 |         }\n  123 |         expect(hasError).toBe(true);\n  124 |       });\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:121:17"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:50:04.739Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-97a91-e-field-nume-invalid-space--firefox\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 17,
                            "line": 121
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-dcdf82ebdffcc2947778",
                  "file": "numeprenume.spec.ts",
                  "line": 111,
                  "column": 11
                },
                {
                  "title": "nume invalid: empty (\"\")",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 31,
                          "parallelIndex": 9,
                          "status": "failed",
                          "duration": 8155,
                          "error": {
                            "message": "Error: bug present: invalid value '' does NOT trigger red outline",
                            "stack": "Error: bug present: invalid value '' does NOT trigger red outline\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:121:17",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 17,
                              "line": 121
                            },
                            "snippet": "\u001b[0m \u001b[90m 119 |\u001b[39m         \u001b[36mconst\u001b[39m hasError \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m hasRedOutline(page\u001b[33m,\u001b[39m \u001b[32m'nume'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 120 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mhasError) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 121 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`bug present: invalid value '${value}' does NOT trigger red outline`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 122 |\u001b[39m         }\n \u001b[90m 123 |\u001b[39m         expect(hasError)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 124 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 17,
                                "line": 121
                              },
                              "message": "Error: bug present: invalid value '' does NOT trigger red outline\n\n  119 |         const hasError = await hasRedOutline(page, 'nume');\n  120 |         if (!hasError) {\n> 121 |           throw new Error(`bug present: invalid value '${value}' does NOT trigger red outline`);\n      |                 ^\n  122 |         }\n  123 |         expect(hasError).toBe(true);\n  124 |       });\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:121:17"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:50:05.124Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-c0f37-e-field-nume-invalid-empty--firefox\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 17,
                            "line": 121
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-eb630f083a40ba6a6256",
                  "file": "numeprenume.spec.ts",
                  "line": 111,
                  "column": 11
                },
                {
                  "title": "nume invalid: digit (\"3\")",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 32,
                          "parallelIndex": 10,
                          "status": "failed",
                          "duration": 8200,
                          "error": {
                            "message": "Error: bug present: invalid value '3' does NOT trigger red outline",
                            "stack": "Error: bug present: invalid value '3' does NOT trigger red outline\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:121:17",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 17,
                              "line": 121
                            },
                            "snippet": "\u001b[0m \u001b[90m 119 |\u001b[39m         \u001b[36mconst\u001b[39m hasError \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m hasRedOutline(page\u001b[33m,\u001b[39m \u001b[32m'nume'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 120 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mhasError) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 121 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`bug present: invalid value '${value}' does NOT trigger red outline`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 122 |\u001b[39m         }\n \u001b[90m 123 |\u001b[39m         expect(hasError)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 124 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 17,
                                "line": 121
                              },
                              "message": "Error: bug present: invalid value '3' does NOT trigger red outline\n\n  119 |         const hasError = await hasRedOutline(page, 'nume');\n  120 |         if (!hasError) {\n> 121 |           throw new Error(`bug present: invalid value '${value}' does NOT trigger red outline`);\n      |                 ^\n  122 |         }\n  123 |         expect(hasError).toBe(true);\n  124 |       });\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:121:17"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:50:05.306Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-7b4b9-field-nume-invalid-digit-3--firefox\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 17,
                            "line": 121
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-1d542168673af326e25c",
                  "file": "numeprenume.spec.ts",
                  "line": 111,
                  "column": 11
                },
                {
                  "title": "nume invalid: symbol (\"!\")",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 33,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 8432,
                          "error": {
                            "message": "Error: bug present: invalid value '!' does NOT trigger red outline",
                            "stack": "Error: bug present: invalid value '!' does NOT trigger red outline\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:121:17",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 17,
                              "line": 121
                            },
                            "snippet": "\u001b[0m \u001b[90m 119 |\u001b[39m         \u001b[36mconst\u001b[39m hasError \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m hasRedOutline(page\u001b[33m,\u001b[39m \u001b[32m'nume'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 120 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mhasError) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 121 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`bug present: invalid value '${value}' does NOT trigger red outline`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 122 |\u001b[39m         }\n \u001b[90m 123 |\u001b[39m         expect(hasError)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 124 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 17,
                                "line": 121
                              },
                              "message": "Error: bug present: invalid value '!' does NOT trigger red outline\n\n  119 |         const hasError = await hasRedOutline(page, 'nume');\n  120 |         if (!hasError) {\n> 121 |           throw new Error(`bug present: invalid value '${value}' does NOT trigger red outline`);\n      |                 ^\n  122 |         }\n  123 |         expect(hasError).toBe(true);\n  124 |       });\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:121:17"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:50:05.856Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-49cc9--field-nume-invalid-symbol--firefox\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 17,
                            "line": 121
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-eba9d8897d8f86a2257f",
                  "file": "numeprenume.spec.ts",
                  "line": 111,
                  "column": 11
                },
                {
                  "title": "nume invalid: too long (\"DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD\")",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 34,
                          "parallelIndex": 6,
                          "status": "failed",
                          "duration": 8288,
                          "error": {
                            "message": "Error: bug present: invalid value 'DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD' does NOT trigger red outline",
                            "stack": "Error: bug present: invalid value 'DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD' does NOT trigger red outline\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:121:17",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 17,
                              "line": 121
                            },
                            "snippet": "\u001b[0m \u001b[90m 119 |\u001b[39m         \u001b[36mconst\u001b[39m hasError \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m hasRedOutline(page\u001b[33m,\u001b[39m \u001b[32m'nume'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 120 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mhasError) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 121 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`bug present: invalid value '${value}' does NOT trigger red outline`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 122 |\u001b[39m         }\n \u001b[90m 123 |\u001b[39m         expect(hasError)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 124 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 17,
                                "line": 121
                              },
                              "message": "Error: bug present: invalid value 'DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD' does NOT trigger red outline\n\n  119 |         const hasError = await hasRedOutline(page, 'nume');\n  120 |         if (!hasError) {\n> 121 |           throw new Error(`bug present: invalid value '${value}' does NOT trigger red outline`);\n      |                 ^\n  122 |         }\n  123 |         expect(hasError).toBe(true);\n  124 |       });\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:121:17"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:50:06.265Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-a4f63-DDDDDDDDDDDDDDDDDDDDDDDDDD--firefox\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 17,
                            "line": 121
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-e643c23c0dca0b243a3d",
                  "file": "numeprenume.spec.ts",
                  "line": 111,
                  "column": 11
                },
                {
                  "title": "nume valid: \"A\"",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 46,
                          "parallelIndex": 6,
                          "status": "failed",
                          "duration": 5929,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m30\u001b[39m\nReceived: \u001b[31m8\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m30\u001b[39m\nReceived: \u001b[31m8\u001b[39m\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:96:33",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 33,
                              "line": 96
                            },
                            "snippet": "\u001b[0m \u001b[90m 94 |\u001b[39m         \u001b[36mconst\u001b[39m maxAttr \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m numeField\u001b[33m.\u001b[39mgetAttribute(\u001b[32m'maxlength'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 95 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mmaxAttr) \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'missing maxlength attribute on nume field'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 96 |\u001b[39m         expect(\u001b[33mNumber\u001b[39m(maxAttr))\u001b[33m.\u001b[39mtoBe(\u001b[35m30\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 97 |\u001b[39m         \u001b[36mconst\u001b[39m actual \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m numeField\u001b[33m.\u001b[39minputValue()\u001b[33m;\u001b[39m\n \u001b[90m 98 |\u001b[39m         \u001b[36mif\u001b[39m (actual\u001b[33m.\u001b[39mlength \u001b[33m!==\u001b[39m value\u001b[33m.\u001b[39mlength) \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`nume input was truncated or modified ('${value}' -> '${actual}')`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 99 |\u001b[39m         \u001b[90m// Click Trimite to trigger validation\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 33,
                                "line": 96
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m30\u001b[39m\nReceived: \u001b[31m8\u001b[39m\n\n  94 |         const maxAttr = await numeField.getAttribute('maxlength');\n  95 |         if (!maxAttr) throw new Error('missing maxlength attribute on nume field');\n> 96 |         expect(Number(maxAttr)).toBe(30);\n     |                                 ^\n  97 |         const actual = await numeField.inputValue();\n  98 |         if (actual.length !== value.length) throw new Error(`nume input was truncated or modified ('${value}' -> '${actual}')`);\n  99 |         // Click Trimite to trigger validation\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:96:33"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:50:22.072Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-cc3d1-on-Nume-field-nume-valid-A--webkit\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 33,
                            "line": 96
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-285be223c759e996c0c8",
                  "file": "numeprenume.spec.ts",
                  "line": 88,
                  "column": 11
                },
                {
                  "title": "nume valid: \"BBBBBBBBBBBBBBBBBBBBBBBBBBBBB\"",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 47,
                          "parallelIndex": 11,
                          "status": "failed",
                          "duration": 5947,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m30\u001b[39m\nReceived: \u001b[31m8\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m30\u001b[39m\nReceived: \u001b[31m8\u001b[39m\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:96:33",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 33,
                              "line": 96
                            },
                            "snippet": "\u001b[0m \u001b[90m 94 |\u001b[39m         \u001b[36mconst\u001b[39m maxAttr \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m numeField\u001b[33m.\u001b[39mgetAttribute(\u001b[32m'maxlength'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 95 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mmaxAttr) \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'missing maxlength attribute on nume field'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 96 |\u001b[39m         expect(\u001b[33mNumber\u001b[39m(maxAttr))\u001b[33m.\u001b[39mtoBe(\u001b[35m30\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 97 |\u001b[39m         \u001b[36mconst\u001b[39m actual \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m numeField\u001b[33m.\u001b[39minputValue()\u001b[33m;\u001b[39m\n \u001b[90m 98 |\u001b[39m         \u001b[36mif\u001b[39m (actual\u001b[33m.\u001b[39mlength \u001b[33m!==\u001b[39m value\u001b[33m.\u001b[39mlength) \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`nume input was truncated or modified ('${value}' -> '${actual}')`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 99 |\u001b[39m         \u001b[90m// Click Trimite to trigger validation\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 33,
                                "line": 96
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m30\u001b[39m\nReceived: \u001b[31m8\u001b[39m\n\n  94 |         const maxAttr = await numeField.getAttribute('maxlength');\n  95 |         if (!maxAttr) throw new Error('missing maxlength attribute on nume field');\n> 96 |         expect(Number(maxAttr)).toBe(30);\n     |                                 ^\n  97 |         const actual = await numeField.inputValue();\n  98 |         if (actual.length !== value.length) throw new Error(`nume input was truncated or modified ('${value}' -> '${actual}')`);\n  99 |         // Click Trimite to trigger validation\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:96:33"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:50:23.780Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-f6975-BBBBBBBBBBBBBBBBBBBBBBBBBB--webkit\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 33,
                            "line": 96
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-bc9ca7137595cad9fb91",
                  "file": "numeprenume.spec.ts",
                  "line": 88,
                  "column": 11
                },
                {
                  "title": "nume valid: \"CCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 48,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 5829,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m30\u001b[39m\nReceived: \u001b[31m8\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m30\u001b[39m\nReceived: \u001b[31m8\u001b[39m\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:96:33",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 33,
                              "line": 96
                            },
                            "snippet": "\u001b[0m \u001b[90m 94 |\u001b[39m         \u001b[36mconst\u001b[39m maxAttr \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m numeField\u001b[33m.\u001b[39mgetAttribute(\u001b[32m'maxlength'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 95 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mmaxAttr) \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'missing maxlength attribute on nume field'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 96 |\u001b[39m         expect(\u001b[33mNumber\u001b[39m(maxAttr))\u001b[33m.\u001b[39mtoBe(\u001b[35m30\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 97 |\u001b[39m         \u001b[36mconst\u001b[39m actual \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m numeField\u001b[33m.\u001b[39minputValue()\u001b[33m;\u001b[39m\n \u001b[90m 98 |\u001b[39m         \u001b[36mif\u001b[39m (actual\u001b[33m.\u001b[39mlength \u001b[33m!==\u001b[39m value\u001b[33m.\u001b[39mlength) \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`nume input was truncated or modified ('${value}' -> '${actual}')`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 99 |\u001b[39m         \u001b[90m// Click Trimite to trigger validation\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 33,
                                "line": 96
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m30\u001b[39m\nReceived: \u001b[31m8\u001b[39m\n\n  94 |         const maxAttr = await numeField.getAttribute('maxlength');\n  95 |         if (!maxAttr) throw new Error('missing maxlength attribute on nume field');\n> 96 |         expect(Number(maxAttr)).toBe(30);\n     |                                 ^\n  97 |         const actual = await numeField.inputValue();\n  98 |         if (actual.length !== value.length) throw new Error(`nume input was truncated or modified ('${value}' -> '${actual}')`);\n  99 |         // Click Trimite to trigger validation\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:96:33"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:50:24.209Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-ea159-CCCCCCCCCCCCCCCCCCCCCCCCCC--webkit\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 33,
                            "line": 96
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-ae275f299230eb937942",
                  "file": "numeprenume.spec.ts",
                  "line": 88,
                  "column": 11
                },
                {
                  "title": "nume valid: \"Z\"",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 49,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 5367,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m30\u001b[39m\nReceived: \u001b[31m8\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m30\u001b[39m\nReceived: \u001b[31m8\u001b[39m\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:96:33",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 33,
                              "line": 96
                            },
                            "snippet": "\u001b[0m \u001b[90m 94 |\u001b[39m         \u001b[36mconst\u001b[39m maxAttr \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m numeField\u001b[33m.\u001b[39mgetAttribute(\u001b[32m'maxlength'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 95 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mmaxAttr) \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'missing maxlength attribute on nume field'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 96 |\u001b[39m         expect(\u001b[33mNumber\u001b[39m(maxAttr))\u001b[33m.\u001b[39mtoBe(\u001b[35m30\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 97 |\u001b[39m         \u001b[36mconst\u001b[39m actual \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m numeField\u001b[33m.\u001b[39minputValue()\u001b[33m;\u001b[39m\n \u001b[90m 98 |\u001b[39m         \u001b[36mif\u001b[39m (actual\u001b[33m.\u001b[39mlength \u001b[33m!==\u001b[39m value\u001b[33m.\u001b[39mlength) \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`nume input was truncated or modified ('${value}' -> '${actual}')`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 99 |\u001b[39m         \u001b[90m// Click Trimite to trigger validation\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 33,
                                "line": 96
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m30\u001b[39m\nReceived: \u001b[31m8\u001b[39m\n\n  94 |         const maxAttr = await numeField.getAttribute('maxlength');\n  95 |         if (!maxAttr) throw new Error('missing maxlength attribute on nume field');\n> 96 |         expect(Number(maxAttr)).toBe(30);\n     |                                 ^\n  97 |         const actual = await numeField.inputValue();\n  98 |         if (actual.length !== value.length) throw new Error(`nume input was truncated or modified ('${value}' -> '${actual}')`);\n  99 |         // Click Trimite to trigger validation\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:96:33"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:50:25.208Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-80e2b-on-Nume-field-nume-valid-Z--webkit\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 33,
                            "line": 96
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-174b209a7d7d67df5685",
                  "file": "numeprenume.spec.ts",
                  "line": 88,
                  "column": 11
                },
                {
                  "title": "nume invalid: lowercase (\"a\")",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 50,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 6514,
                          "error": {
                            "message": "Error: bug present: invalid value 'a' does NOT trigger red outline",
                            "stack": "Error: bug present: invalid value 'a' does NOT trigger red outline\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:121:17",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 17,
                              "line": 121
                            },
                            "snippet": "\u001b[0m \u001b[90m 119 |\u001b[39m         \u001b[36mconst\u001b[39m hasError \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m hasRedOutline(page\u001b[33m,\u001b[39m \u001b[32m'nume'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 120 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mhasError) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 121 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`bug present: invalid value '${value}' does NOT trigger red outline`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 122 |\u001b[39m         }\n \u001b[90m 123 |\u001b[39m         expect(hasError)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 124 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 17,
                                "line": 121
                              },
                              "message": "Error: bug present: invalid value 'a' does NOT trigger red outline\n\n  119 |         const hasError = await hasRedOutline(page, 'nume');\n  120 |         if (!hasError) {\n> 121 |           throw new Error(`bug present: invalid value '${value}' does NOT trigger red outline`);\n      |                 ^\n  122 |         }\n  123 |         expect(hasError).toBe(true);\n  124 |       });\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:121:17"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:50:27.013Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-e3976-d-nume-invalid-lowercase-a--webkit\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 17,
                            "line": 121
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-7961b7b93662cf982de0",
                  "file": "numeprenume.spec.ts",
                  "line": 111,
                  "column": 11
                },
                {
                  "title": "nume invalid: lowercase (\"z\")",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 51,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 6462,
                          "error": {
                            "message": "Error: bug present: invalid value 'z' does NOT trigger red outline",
                            "stack": "Error: bug present: invalid value 'z' does NOT trigger red outline\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:121:17",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 17,
                              "line": 121
                            },
                            "snippet": "\u001b[0m \u001b[90m 119 |\u001b[39m         \u001b[36mconst\u001b[39m hasError \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m hasRedOutline(page\u001b[33m,\u001b[39m \u001b[32m'nume'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 120 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mhasError) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 121 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`bug present: invalid value '${value}' does NOT trigger red outline`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 122 |\u001b[39m         }\n \u001b[90m 123 |\u001b[39m         expect(hasError)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 124 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 17,
                                "line": 121
                              },
                              "message": "Error: bug present: invalid value 'z' does NOT trigger red outline\n\n  119 |         const hasError = await hasRedOutline(page, 'nume');\n  120 |         if (!hasError) {\n> 121 |           throw new Error(`bug present: invalid value '${value}' does NOT trigger red outline`);\n      |                 ^\n  122 |         }\n  123 |         expect(hasError).toBe(true);\n  124 |       });\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:121:17"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:50:29.085Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-e98e0-d-nume-invalid-lowercase-z--webkit\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 17,
                            "line": 121
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-825aedea72cd534c88db",
                  "file": "numeprenume.spec.ts",
                  "line": 111,
                  "column": 11
                },
                {
                  "title": "nume invalid: diacritic (\"├ó\")",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 52,
                          "parallelIndex": 5,
                          "status": "failed",
                          "duration": 6641,
                          "error": {
                            "message": "Error: bug present: invalid value '├ó' does NOT trigger red outline",
                            "stack": "Error: bug present: invalid value '├ó' does NOT trigger red outline\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:121:17",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 17,
                              "line": 121
                            },
                            "snippet": "\u001b[0m \u001b[90m 119 |\u001b[39m         \u001b[36mconst\u001b[39m hasError \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m hasRedOutline(page\u001b[33m,\u001b[39m \u001b[32m'nume'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 120 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mhasError) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 121 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`bug present: invalid value '${value}' does NOT trigger red outline`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 122 |\u001b[39m         }\n \u001b[90m 123 |\u001b[39m         expect(hasError)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 124 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 17,
                                "line": 121
                              },
                              "message": "Error: bug present: invalid value '├ó' does NOT trigger red outline\n\n  119 |         const hasError = await hasRedOutline(page, 'nume');\n  120 |         if (!hasError) {\n> 121 |           throw new Error(`bug present: invalid value '${value}' does NOT trigger red outline`);\n      |                 ^\n  122 |         }\n  123 |         expect(hasError).toBe(true);\n  124 |       });\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:121:17"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:50:29.800Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-4194f-d-nume-invalid-diacritic-├ó--webkit\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 17,
                            "line": 121
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-f3745c025ae730085a01",
                  "file": "numeprenume.spec.ts",
                  "line": 111,
                  "column": 11
                },
                {
                  "title": "nume invalid: space (\" \")",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 53,
                          "parallelIndex": 6,
                          "status": "failed",
                          "duration": 6596,
                          "error": {
                            "message": "Error: bug present: invalid value ' ' does NOT trigger red outline",
                            "stack": "Error: bug present: invalid value ' ' does NOT trigger red outline\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:121:17",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 17,
                              "line": 121
                            },
                            "snippet": "\u001b[0m \u001b[90m 119 |\u001b[39m         \u001b[36mconst\u001b[39m hasError \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m hasRedOutline(page\u001b[33m,\u001b[39m \u001b[32m'nume'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 120 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mhasError) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 121 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`bug present: invalid value '${value}' does NOT trigger red outline`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 122 |\u001b[39m         }\n \u001b[90m 123 |\u001b[39m         expect(hasError)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 124 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 17,
                                "line": 121
                              },
                              "message": "Error: bug present: invalid value ' ' does NOT trigger red outline\n\n  119 |         const hasError = await hasRedOutline(page, 'nume');\n  120 |         if (!hasError) {\n> 121 |           throw new Error(`bug present: invalid value '${value}' does NOT trigger red outline`);\n      |                 ^\n  122 |         }\n  123 |         expect(hasError).toBe(true);\n  124 |       });\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:121:17"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:50:30.209Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-97a91-e-field-nume-invalid-space--webkit\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 17,
                            "line": 121
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-0f5273fb95bbc2c2e753",
                  "file": "numeprenume.spec.ts",
                  "line": 111,
                  "column": 11
                },
                {
                  "title": "nume invalid: empty (\"\")",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 54,
                          "parallelIndex": 11,
                          "status": "failed",
                          "duration": 6133,
                          "error": {
                            "message": "Error: bug present: invalid value '' does NOT trigger red outline",
                            "stack": "Error: bug present: invalid value '' does NOT trigger red outline\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:121:17",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 17,
                              "line": 121
                            },
                            "snippet": "\u001b[0m \u001b[90m 119 |\u001b[39m         \u001b[36mconst\u001b[39m hasError \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m hasRedOutline(page\u001b[33m,\u001b[39m \u001b[32m'nume'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 120 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mhasError) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 121 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`bug present: invalid value '${value}' does NOT trigger red outline`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 122 |\u001b[39m         }\n \u001b[90m 123 |\u001b[39m         expect(hasError)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 124 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 17,
                                "line": 121
                              },
                              "message": "Error: bug present: invalid value '' does NOT trigger red outline\n\n  119 |         const hasError = await hasRedOutline(page, 'nume');\n  120 |         if (!hasError) {\n> 121 |           throw new Error(`bug present: invalid value '${value}' does NOT trigger red outline`);\n      |                 ^\n  122 |         }\n  123 |         expect(hasError).toBe(true);\n  124 |       });\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:121:17"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:50:31.724Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-c0f37-e-field-nume-invalid-empty--webkit\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 17,
                            "line": 121
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-d469c430ea2f90ef4751",
                  "file": "numeprenume.spec.ts",
                  "line": 111,
                  "column": 11
                },
                {
                  "title": "nume invalid: digit (\"3\")",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 55,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 7172,
                          "error": {
                            "message": "Error: bug present: invalid value '3' does NOT trigger red outline",
                            "stack": "Error: bug present: invalid value '3' does NOT trigger red outline\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:121:17",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 17,
                              "line": 121
                            },
                            "snippet": "\u001b[0m \u001b[90m 119 |\u001b[39m         \u001b[36mconst\u001b[39m hasError \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m hasRedOutline(page\u001b[33m,\u001b[39m \u001b[32m'nume'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 120 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mhasError) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 121 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`bug present: invalid value '${value}' does NOT trigger red outline`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 122 |\u001b[39m         }\n \u001b[90m 123 |\u001b[39m         expect(hasError)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 124 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 17,
                                "line": 121
                              },
                              "message": "Error: bug present: invalid value '3' does NOT trigger red outline\n\n  119 |         const hasError = await hasRedOutline(page, 'nume');\n  120 |         if (!hasError) {\n> 121 |           throw new Error(`bug present: invalid value '${value}' does NOT trigger red outline`);\n      |                 ^\n  122 |         }\n  123 |         expect(hasError).toBe(true);\n  124 |       });\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:121:17"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:50:32.317Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-7b4b9-field-nume-invalid-digit-3--webkit\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 17,
                            "line": 121
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-6ef7a5b57daa99f45c11",
                  "file": "numeprenume.spec.ts",
                  "line": 111,
                  "column": 11
                },
                {
                  "title": "nume invalid: symbol (\"!\")",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 56,
                          "parallelIndex": 8,
                          "status": "failed",
                          "duration": 7170,
                          "error": {
                            "message": "Error: bug present: invalid value '!' does NOT trigger red outline",
                            "stack": "Error: bug present: invalid value '!' does NOT trigger red outline\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:121:17",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 17,
                              "line": 121
                            },
                            "snippet": "\u001b[0m \u001b[90m 119 |\u001b[39m         \u001b[36mconst\u001b[39m hasError \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m hasRedOutline(page\u001b[33m,\u001b[39m \u001b[32m'nume'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 120 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mhasError) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 121 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`bug present: invalid value '${value}' does NOT trigger red outline`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 122 |\u001b[39m         }\n \u001b[90m 123 |\u001b[39m         expect(hasError)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 124 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 17,
                                "line": 121
                              },
                              "message": "Error: bug present: invalid value '!' does NOT trigger red outline\n\n  119 |         const hasError = await hasRedOutline(page, 'nume');\n  120 |         if (!hasError) {\n> 121 |           throw new Error(`bug present: invalid value '${value}' does NOT trigger red outline`);\n      |                 ^\n  122 |         }\n  123 |         expect(hasError).toBe(true);\n  124 |       });\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:121:17"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:50:32.374Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-49cc9--field-nume-invalid-symbol--webkit\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 17,
                            "line": 121
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-61ec7f231dbe81842f7f",
                  "file": "numeprenume.spec.ts",
                  "line": 111,
                  "column": 11
                },
                {
                  "title": "nume invalid: too long (\"DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD\")",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 57,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 7272,
                          "error": {
                            "message": "Error: bug present: invalid value 'DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD' does NOT trigger red outline",
                            "stack": "Error: bug present: invalid value 'DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD' does NOT trigger red outline\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:121:17",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 17,
                              "line": 121
                            },
                            "snippet": "\u001b[0m \u001b[90m 119 |\u001b[39m         \u001b[36mconst\u001b[39m hasError \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m hasRedOutline(page\u001b[33m,\u001b[39m \u001b[32m'nume'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 120 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mhasError) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 121 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`bug present: invalid value '${value}' does NOT trigger red outline`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 122 |\u001b[39m         }\n \u001b[90m 123 |\u001b[39m         expect(hasError)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 124 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 17,
                                "line": 121
                              },
                              "message": "Error: bug present: invalid value 'DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD' does NOT trigger red outline\n\n  119 |         const hasError = await hasRedOutline(page, 'nume');\n  120 |         if (!hasError) {\n> 121 |           throw new Error(`bug present: invalid value '${value}' does NOT trigger red outline`);\n      |                 ^\n  122 |         }\n  123 |         expect(hasError).toBe(true);\n  124 |       });\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:121:17"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:50:32.552Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-a4f63-DDDDDDDDDDDDDDDDDDDDDDDDDD--webkit\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 17,
                            "line": 121
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-0650bceec1d5155ce202",
                  "file": "numeprenume.spec.ts",
                  "line": 111,
                  "column": 11
                }
              ]
            },
            {
              "title": "Prenume field",
              "file": "numeprenume.spec.ts",
              "line": 128,
              "column": 8,
              "specs": [
                {
                  "title": "prenume valid: \"A\"",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 12,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 5930,
                          "error": {
                            "message": "Error: missing maxlength attribute on prenume field",
                            "stack": "Error: missing maxlength attribute on prenume field\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:153:29",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 29,
                              "line": 153
                            },
                            "snippet": "\u001b[0m \u001b[90m 151 |\u001b[39m         \u001b[90m// maxlength must be 30 and the input should accept the full value\u001b[39m\n \u001b[90m 152 |\u001b[39m         \u001b[36mconst\u001b[39m maxAttr \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m prenumeField\u001b[33m.\u001b[39mgetAttribute(\u001b[32m'maxlength'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 153 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mmaxAttr) \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'missing maxlength attribute on prenume field'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 154 |\u001b[39m         expect(\u001b[33mNumber\u001b[39m(maxAttr))\u001b[33m.\u001b[39mtoBe(\u001b[35m30\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 155 |\u001b[39m         \u001b[36mconst\u001b[39m actual \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m prenumeField\u001b[33m.\u001b[39minputValue()\u001b[33m;\u001b[39m\n \u001b[90m 156 |\u001b[39m         \u001b[36mif\u001b[39m (actual\u001b[33m.\u001b[39mlength \u001b[33m!==\u001b[39m value\u001b[33m.\u001b[39mlength) \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`prenume input was truncated or modified ('${value}' -> '${actual}')`\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 29,
                                "line": 153
                              },
                              "message": "Error: missing maxlength attribute on prenume field\n\n  151 |         // maxlength must be 30 and the input should accept the full value\n  152 |         const maxAttr = await prenumeField.getAttribute('maxlength');\n> 153 |         if (!maxAttr) throw new Error('missing maxlength attribute on prenume field');\n      |                             ^\n  154 |         expect(Number(maxAttr)).toBe(30);\n  155 |         const actual = await prenumeField.inputValue();\n  156 |         if (actual.length !== value.length) throw new Error(`prenume input was truncated or modified ('${value}' -> '${actual}')`);\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:153:29"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:49:49.613Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-1e5ba-nume-field-prenume-valid-A--chromium\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 29,
                            "line": 153
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-da8bb04c3631917428a4",
                  "file": "numeprenume.spec.ts",
                  "line": 146,
                  "column": 11
                },
                {
                  "title": "prenume valid: \"YYYYYYYYYYYYYYYYYYYYYYYYYYYYY\"",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 13,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 5613,
                          "error": {
                            "message": "Error: missing maxlength attribute on prenume field",
                            "stack": "Error: missing maxlength attribute on prenume field\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:153:29",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 29,
                              "line": 153
                            },
                            "snippet": "\u001b[0m \u001b[90m 151 |\u001b[39m         \u001b[90m// maxlength must be 30 and the input should accept the full value\u001b[39m\n \u001b[90m 152 |\u001b[39m         \u001b[36mconst\u001b[39m maxAttr \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m prenumeField\u001b[33m.\u001b[39mgetAttribute(\u001b[32m'maxlength'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 153 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mmaxAttr) \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'missing maxlength attribute on prenume field'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 154 |\u001b[39m         expect(\u001b[33mNumber\u001b[39m(maxAttr))\u001b[33m.\u001b[39mtoBe(\u001b[35m30\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 155 |\u001b[39m         \u001b[36mconst\u001b[39m actual \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m prenumeField\u001b[33m.\u001b[39minputValue()\u001b[33m;\u001b[39m\n \u001b[90m 156 |\u001b[39m         \u001b[36mif\u001b[39m (actual\u001b[33m.\u001b[39mlength \u001b[33m!==\u001b[39m value\u001b[33m.\u001b[39mlength) \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`prenume input was truncated or modified ('${value}' -> '${actual}')`\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 29,
                                "line": 153
                              },
                              "message": "Error: missing maxlength attribute on prenume field\n\n  151 |         // maxlength must be 30 and the input should accept the full value\n  152 |         const maxAttr = await prenumeField.getAttribute('maxlength');\n> 153 |         if (!maxAttr) throw new Error('missing maxlength attribute on prenume field');\n      |                             ^\n  154 |         expect(Number(maxAttr)).toBe(30);\n  155 |         const actual = await prenumeField.inputValue();\n  156 |         if (actual.length !== value.length) throw new Error(`prenume input was truncated or modified ('${value}' -> '${actual}')`);\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:153:29"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:49:50.128Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-2dda0-YYYYYYYYYYYYYYYYYYYYYYYYYY--chromium\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 29,
                            "line": 153
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-947e83ae450a57c48f8b",
                  "file": "numeprenume.spec.ts",
                  "line": 146,
                  "column": 11
                },
                {
                  "title": "prenume valid: \"ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ\"",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 14,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 5262,
                          "error": {
                            "message": "Error: missing maxlength attribute on prenume field",
                            "stack": "Error: missing maxlength attribute on prenume field\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:153:29",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 29,
                              "line": 153
                            },
                            "snippet": "\u001b[0m \u001b[90m 151 |\u001b[39m         \u001b[90m// maxlength must be 30 and the input should accept the full value\u001b[39m\n \u001b[90m 152 |\u001b[39m         \u001b[36mconst\u001b[39m maxAttr \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m prenumeField\u001b[33m.\u001b[39mgetAttribute(\u001b[32m'maxlength'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 153 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mmaxAttr) \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'missing maxlength attribute on prenume field'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 154 |\u001b[39m         expect(\u001b[33mNumber\u001b[39m(maxAttr))\u001b[33m.\u001b[39mtoBe(\u001b[35m30\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 155 |\u001b[39m         \u001b[36mconst\u001b[39m actual \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m prenumeField\u001b[33m.\u001b[39minputValue()\u001b[33m;\u001b[39m\n \u001b[90m 156 |\u001b[39m         \u001b[36mif\u001b[39m (actual\u001b[33m.\u001b[39mlength \u001b[33m!==\u001b[39m value\u001b[33m.\u001b[39mlength) \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`prenume input was truncated or modified ('${value}' -> '${actual}')`\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 29,
                                "line": 153
                              },
                              "message": "Error: missing maxlength attribute on prenume field\n\n  151 |         // maxlength must be 30 and the input should accept the full value\n  152 |         const maxAttr = await prenumeField.getAttribute('maxlength');\n> 153 |         if (!maxAttr) throw new Error('missing maxlength attribute on prenume field');\n      |                             ^\n  154 |         expect(Number(maxAttr)).toBe(30);\n  155 |         const actual = await prenumeField.inputValue();\n  156 |         if (actual.length !== value.length) throw new Error(`prenume input was truncated or modified ('${value}' -> '${actual}')`);\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:153:29"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:49:50.293Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-151b6-ZZZZZZZZZZZZZZZZZZZZZZZZZZ--chromium\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 29,
                            "line": 153
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-cf150337bc83c5f3734b",
                  "file": "numeprenume.spec.ts",
                  "line": 146,
                  "column": 11
                },
                {
                  "title": "prenume invalid: lowercase (\"a\")",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 15,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 6296,
                          "error": {
                            "message": "Error: bug present: invalid value 'a' does NOT trigger red outline",
                            "stack": "Error: bug present: invalid value 'a' does NOT trigger red outline\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:179:17",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 17,
                              "line": 179
                            },
                            "snippet": "\u001b[0m \u001b[90m 177 |\u001b[39m         \u001b[36mconst\u001b[39m hasError \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m hasRedOutline(page\u001b[33m,\u001b[39m \u001b[32m'prenume'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 178 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mhasError) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 179 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`bug present: invalid value '${value}' does NOT trigger red outline`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 180 |\u001b[39m         }\n \u001b[90m 181 |\u001b[39m         expect(hasError)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 182 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 17,
                                "line": 179
                              },
                              "message": "Error: bug present: invalid value 'a' does NOT trigger red outline\n\n  177 |         const hasError = await hasRedOutline(page, 'prenume');\n  178 |         if (!hasError) {\n> 179 |           throw new Error(`bug present: invalid value '${value}' does NOT trigger red outline`);\n      |                 ^\n  180 |         }\n  181 |         expect(hasError).toBe(true);\n  182 |       });\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:179:17"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:49:50.889Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-f5693-renume-invalid-lowercase-a--chromium\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 17,
                            "line": 179
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-085473ce94bea98b4fd8",
                  "file": "numeprenume.spec.ts",
                  "line": 169,
                  "column": 11
                },
                {
                  "title": "prenume invalid: lowercase (\"z\")",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 16,
                          "parallelIndex": 5,
                          "status": "failed",
                          "duration": 5854,
                          "error": {
                            "message": "Error: bug present: invalid value 'z' does NOT trigger red outline",
                            "stack": "Error: bug present: invalid value 'z' does NOT trigger red outline\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:179:17",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 17,
                              "line": 179
                            },
                            "snippet": "\u001b[0m \u001b[90m 177 |\u001b[39m         \u001b[36mconst\u001b[39m hasError \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m hasRedOutline(page\u001b[33m,\u001b[39m \u001b[32m'prenume'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 178 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mhasError) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 179 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`bug present: invalid value '${value}' does NOT trigger red outline`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 180 |\u001b[39m         }\n \u001b[90m 181 |\u001b[39m         expect(hasError)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 182 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 17,
                                "line": 179
                              },
                              "message": "Error: bug present: invalid value 'z' does NOT trigger red outline\n\n  177 |         const hasError = await hasRedOutline(page, 'prenume');\n  178 |         if (!hasError) {\n> 179 |           throw new Error(`bug present: invalid value '${value}' does NOT trigger red outline`);\n      |                 ^\n  180 |         }\n  181 |         expect(hasError).toBe(true);\n  182 |       });\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:179:17"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:49:52.264Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-fa928-renume-invalid-lowercase-z--chromium\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 17,
                            "line": 179
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-be9cbfeb426be0a72317",
                  "file": "numeprenume.spec.ts",
                  "line": 169,
                  "column": 11
                },
                {
                  "title": "prenume invalid: diacritic (\"├ó\")",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 17,
                          "parallelIndex": 7,
                          "status": "failed",
                          "duration": 6563,
                          "error": {
                            "message": "Error: bug present: invalid value '├ó' does NOT trigger red outline",
                            "stack": "Error: bug present: invalid value '├ó' does NOT trigger red outline\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:179:17",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 17,
                              "line": 179
                            },
                            "snippet": "\u001b[0m \u001b[90m 177 |\u001b[39m         \u001b[36mconst\u001b[39m hasError \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m hasRedOutline(page\u001b[33m,\u001b[39m \u001b[32m'prenume'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 178 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mhasError) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 179 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`bug present: invalid value '${value}' does NOT trigger red outline`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 180 |\u001b[39m         }\n \u001b[90m 181 |\u001b[39m         expect(hasError)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 182 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 17,
                                "line": 179
                              },
                              "message": "Error: bug present: invalid value '├ó' does NOT trigger red outline\n\n  177 |         const hasError = await hasRedOutline(page, 'prenume');\n  178 |         if (!hasError) {\n> 179 |           throw new Error(`bug present: invalid value '${value}' does NOT trigger red outline`);\n      |                 ^\n  180 |         }\n  181 |         expect(hasError).toBe(true);\n  182 |       });\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:179:17"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:49:55.635Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-38dbd-renume-invalid-diacritic-├ó--chromium\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 17,
                            "line": 179
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-53348414b8ed6c1f276b",
                  "file": "numeprenume.spec.ts",
                  "line": 169,
                  "column": 11
                },
                {
                  "title": "prenume invalid: space (\" \")",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 18,
                          "parallelIndex": 9,
                          "status": "failed",
                          "duration": 6667,
                          "error": {
                            "message": "Error: bug present: invalid value ' ' does NOT trigger red outline",
                            "stack": "Error: bug present: invalid value ' ' does NOT trigger red outline\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:179:17",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 17,
                              "line": 179
                            },
                            "snippet": "\u001b[0m \u001b[90m 177 |\u001b[39m         \u001b[36mconst\u001b[39m hasError \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m hasRedOutline(page\u001b[33m,\u001b[39m \u001b[32m'prenume'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 178 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mhasError) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 179 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`bug present: invalid value '${value}' does NOT trigger red outline`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 180 |\u001b[39m         }\n \u001b[90m 181 |\u001b[39m         expect(hasError)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 182 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 17,
                                "line": 179
                              },
                              "message": "Error: bug present: invalid value ' ' does NOT trigger red outline\n\n  177 |         const hasError = await hasRedOutline(page, 'prenume');\n  178 |         if (!hasError) {\n> 179 |           throw new Error(`bug present: invalid value '${value}' does NOT trigger red outline`);\n      |                 ^\n  180 |         }\n  181 |         expect(hasError).toBe(true);\n  182 |       });\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:179:17"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:49:56.039Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-c6a69-ield-prenume-invalid-space--chromium\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 17,
                            "line": 179
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-90816f1f4740eb01be53",
                  "file": "numeprenume.spec.ts",
                  "line": 169,
                  "column": 11
                },
                {
                  "title": "prenume invalid: empty (\"\")",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 19,
                          "parallelIndex": 10,
                          "status": "failed",
                          "duration": 6736,
                          "error": {
                            "message": "Error: bug present: invalid value '' does NOT trigger red outline",
                            "stack": "Error: bug present: invalid value '' does NOT trigger red outline\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:179:17",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 17,
                              "line": 179
                            },
                            "snippet": "\u001b[0m \u001b[90m 177 |\u001b[39m         \u001b[36mconst\u001b[39m hasError \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m hasRedOutline(page\u001b[33m,\u001b[39m \u001b[32m'prenume'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 178 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mhasError) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 179 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`bug present: invalid value '${value}' does NOT trigger red outline`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 180 |\u001b[39m         }\n \u001b[90m 181 |\u001b[39m         expect(hasError)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 182 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 17,
                                "line": 179
                              },
                              "message": "Error: bug present: invalid value '' does NOT trigger red outline\n\n  177 |         const hasError = await hasRedOutline(page, 'prenume');\n  178 |         if (!hasError) {\n> 179 |           throw new Error(`bug present: invalid value '${value}' does NOT trigger red outline`);\n      |                 ^\n  180 |         }\n  181 |         expect(hasError).toBe(true);\n  182 |       });\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:179:17"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:49:56.168Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-f50a6-ield-prenume-invalid-empty--chromium\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 17,
                            "line": 179
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-2dd460621f73dd0a40cf",
                  "file": "numeprenume.spec.ts",
                  "line": 169,
                  "column": 11
                },
                {
                  "title": "prenume invalid: digit (\"3\")",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 20,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 7144,
                          "error": {
                            "message": "Error: bug present: invalid value '3' does NOT trigger red outline",
                            "stack": "Error: bug present: invalid value '3' does NOT trigger red outline\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:179:17",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 17,
                              "line": 179
                            },
                            "snippet": "\u001b[0m \u001b[90m 177 |\u001b[39m         \u001b[36mconst\u001b[39m hasError \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m hasRedOutline(page\u001b[33m,\u001b[39m \u001b[32m'prenume'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 178 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mhasError) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 179 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`bug present: invalid value '${value}' does NOT trigger red outline`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 180 |\u001b[39m         }\n \u001b[90m 181 |\u001b[39m         expect(hasError)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 182 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 17,
                                "line": 179
                              },
                              "message": "Error: bug present: invalid value '3' does NOT trigger red outline\n\n  177 |         const hasError = await hasRedOutline(page, 'prenume');\n  178 |         if (!hasError) {\n> 179 |           throw new Error(`bug present: invalid value '${value}' does NOT trigger red outline`);\n      |                 ^\n  180 |         }\n  181 |         expect(hasError).toBe(true);\n  182 |       });\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:179:17"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:49:56.529Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-7d364-ld-prenume-invalid-digit-3--chromium\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 17,
                            "line": 179
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-d30f5291dbc95da0fd52",
                  "file": "numeprenume.spec.ts",
                  "line": 169,
                  "column": 11
                },
                {
                  "title": "prenume invalid: symbol (\"!\")",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 21,
                          "parallelIndex": 6,
                          "status": "failed",
                          "duration": 7440,
                          "error": {
                            "message": "Error: bug present: invalid value '!' does NOT trigger red outline",
                            "stack": "Error: bug present: invalid value '!' does NOT trigger red outline\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:179:17",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 17,
                              "line": 179
                            },
                            "snippet": "\u001b[0m \u001b[90m 177 |\u001b[39m         \u001b[36mconst\u001b[39m hasError \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m hasRedOutline(page\u001b[33m,\u001b[39m \u001b[32m'prenume'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 178 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mhasError) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 179 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`bug present: invalid value '${value}' does NOT trigger red outline`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 180 |\u001b[39m         }\n \u001b[90m 181 |\u001b[39m         expect(hasError)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 182 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 17,
                                "line": 179
                              },
                              "message": "Error: bug present: invalid value '!' does NOT trigger red outline\n\n  177 |         const hasError = await hasRedOutline(page, 'prenume');\n  178 |         if (!hasError) {\n> 179 |           throw new Error(`bug present: invalid value '${value}' does NOT trigger red outline`);\n      |                 ^\n  180 |         }\n  181 |         expect(hasError).toBe(true);\n  182 |       });\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:179:17"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:49:56.604Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-7540c-eld-prenume-invalid-symbol--chromium\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 17,
                            "line": 179
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-ce1929fa1dd480fecf3d",
                  "file": "numeprenume.spec.ts",
                  "line": 169,
                  "column": 11
                },
                {
                  "title": "prenume invalid: too long (\"DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD\")",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 22,
                          "parallelIndex": 8,
                          "status": "failed",
                          "duration": 5910,
                          "error": {
                            "message": "Error: bug present: invalid value 'DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD' does NOT trigger red outline",
                            "stack": "Error: bug present: invalid value 'DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD' does NOT trigger red outline\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:179:17",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 17,
                              "line": 179
                            },
                            "snippet": "\u001b[0m \u001b[90m 177 |\u001b[39m         \u001b[36mconst\u001b[39m hasError \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m hasRedOutline(page\u001b[33m,\u001b[39m \u001b[32m'prenume'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 178 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mhasError) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 179 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`bug present: invalid value '${value}' does NOT trigger red outline`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 180 |\u001b[39m         }\n \u001b[90m 181 |\u001b[39m         expect(hasError)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 182 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 17,
                                "line": 179
                              },
                              "message": "Error: bug present: invalid value 'DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD' does NOT trigger red outline\n\n  177 |         const hasError = await hasRedOutline(page, 'prenume');\n  178 |         if (!hasError) {\n> 179 |           throw new Error(`bug present: invalid value '${value}' does NOT trigger red outline`);\n      |                 ^\n  180 |         }\n  181 |         expect(hasError).toBe(true);\n  182 |       });\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:179:17"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:49:55.327Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-c33cd-DDDDDDDDDDDDDDDDDDDDDDDDDD--chromium\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 17,
                            "line": 179
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-593d90dd125b6788eb0a",
                  "file": "numeprenume.spec.ts",
                  "line": 169,
                  "column": 11
                },
                {
                  "title": "prenume valid: \"A\"",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 35,
                          "parallelIndex": 11,
                          "status": "failed",
                          "duration": 7632,
                          "error": {
                            "message": "Error: missing maxlength attribute on prenume field",
                            "stack": "Error: missing maxlength attribute on prenume field\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:153:29",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 29,
                              "line": 153
                            },
                            "snippet": "\u001b[0m \u001b[90m 151 |\u001b[39m         \u001b[90m// maxlength must be 30 and the input should accept the full value\u001b[39m\n \u001b[90m 152 |\u001b[39m         \u001b[36mconst\u001b[39m maxAttr \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m prenumeField\u001b[33m.\u001b[39mgetAttribute(\u001b[32m'maxlength'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 153 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mmaxAttr) \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'missing maxlength attribute on prenume field'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 154 |\u001b[39m         expect(\u001b[33mNumber\u001b[39m(maxAttr))\u001b[33m.\u001b[39mtoBe(\u001b[35m30\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 155 |\u001b[39m         \u001b[36mconst\u001b[39m actual \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m prenumeField\u001b[33m.\u001b[39minputValue()\u001b[33m;\u001b[39m\n \u001b[90m 156 |\u001b[39m         \u001b[36mif\u001b[39m (actual\u001b[33m.\u001b[39mlength \u001b[33m!==\u001b[39m value\u001b[33m.\u001b[39mlength) \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`prenume input was truncated or modified ('${value}' -> '${actual}')`\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 29,
                                "line": 153
                              },
                              "message": "Error: missing maxlength attribute on prenume field\n\n  151 |         // maxlength must be 30 and the input should accept the full value\n  152 |         const maxAttr = await prenumeField.getAttribute('maxlength');\n> 153 |         if (!maxAttr) throw new Error('missing maxlength attribute on prenume field');\n      |                             ^\n  154 |         expect(Number(maxAttr)).toBe(30);\n  155 |         const actual = await prenumeField.inputValue();\n  156 |         if (actual.length !== value.length) throw new Error(`prenume input was truncated or modified ('${value}' -> '${actual}')`);\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:153:29"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:50:08.904Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-1e5ba-nume-field-prenume-valid-A--firefox\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 29,
                            "line": 153
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-ff2db2778f387dacb9e9",
                  "file": "numeprenume.spec.ts",
                  "line": 146,
                  "column": 11
                },
                {
                  "title": "prenume valid: \"YYYYYYYYYYYYYYYYYYYYYYYYYYYYY\"",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 36,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 6708,
                          "error": {
                            "message": "Error: missing maxlength attribute on prenume field",
                            "stack": "Error: missing maxlength attribute on prenume field\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:153:29",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 29,
                              "line": 153
                            },
                            "snippet": "\u001b[0m \u001b[90m 151 |\u001b[39m         \u001b[90m// maxlength must be 30 and the input should accept the full value\u001b[39m\n \u001b[90m 152 |\u001b[39m         \u001b[36mconst\u001b[39m maxAttr \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m prenumeField\u001b[33m.\u001b[39mgetAttribute(\u001b[32m'maxlength'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 153 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mmaxAttr) \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'missing maxlength attribute on prenume field'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 154 |\u001b[39m         expect(\u001b[33mNumber\u001b[39m(maxAttr))\u001b[33m.\u001b[39mtoBe(\u001b[35m30\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 155 |\u001b[39m         \u001b[36mconst\u001b[39m actual \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m prenumeField\u001b[33m.\u001b[39minputValue()\u001b[33m;\u001b[39m\n \u001b[90m 156 |\u001b[39m         \u001b[36mif\u001b[39m (actual\u001b[33m.\u001b[39mlength \u001b[33m!==\u001b[39m value\u001b[33m.\u001b[39mlength) \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`prenume input was truncated or modified ('${value}' -> '${actual}')`\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 29,
                                "line": 153
                              },
                              "message": "Error: missing maxlength attribute on prenume field\n\n  151 |         // maxlength must be 30 and the input should accept the full value\n  152 |         const maxAttr = await prenumeField.getAttribute('maxlength');\n> 153 |         if (!maxAttr) throw new Error('missing maxlength attribute on prenume field');\n      |                             ^\n  154 |         expect(Number(maxAttr)).toBe(30);\n  155 |         const actual = await prenumeField.inputValue();\n  156 |         if (actual.length !== value.length) throw new Error(`prenume input was truncated or modified ('${value}' -> '${actual}')`);\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:153:29"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:50:10.311Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-2dda0-YYYYYYYYYYYYYYYYYYYYYYYYYY--firefox\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 29,
                            "line": 153
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-95a134b212421260ec44",
                  "file": "numeprenume.spec.ts",
                  "line": 146,
                  "column": 11
                },
                {
                  "title": "prenume valid: \"ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ\"",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 37,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 7100,
                          "error": {
                            "message": "Error: missing maxlength attribute on prenume field",
                            "stack": "Error: missing maxlength attribute on prenume field\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:153:29",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 29,
                              "line": 153
                            },
                            "snippet": "\u001b[0m \u001b[90m 151 |\u001b[39m         \u001b[90m// maxlength must be 30 and the input should accept the full value\u001b[39m\n \u001b[90m 152 |\u001b[39m         \u001b[36mconst\u001b[39m maxAttr \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m prenumeField\u001b[33m.\u001b[39mgetAttribute(\u001b[32m'maxlength'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 153 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mmaxAttr) \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'missing maxlength attribute on prenume field'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 154 |\u001b[39m         expect(\u001b[33mNumber\u001b[39m(maxAttr))\u001b[33m.\u001b[39mtoBe(\u001b[35m30\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 155 |\u001b[39m         \u001b[36mconst\u001b[39m actual \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m prenumeField\u001b[33m.\u001b[39minputValue()\u001b[33m;\u001b[39m\n \u001b[90m 156 |\u001b[39m         \u001b[36mif\u001b[39m (actual\u001b[33m.\u001b[39mlength \u001b[33m!==\u001b[39m value\u001b[33m.\u001b[39mlength) \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`prenume input was truncated or modified ('${value}' -> '${actual}')`\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 29,
                                "line": 153
                              },
                              "message": "Error: missing maxlength attribute on prenume field\n\n  151 |         // maxlength must be 30 and the input should accept the full value\n  152 |         const maxAttr = await prenumeField.getAttribute('maxlength');\n> 153 |         if (!maxAttr) throw new Error('missing maxlength attribute on prenume field');\n      |                             ^\n  154 |         expect(Number(maxAttr)).toBe(30);\n  155 |         const actual = await prenumeField.inputValue();\n  156 |         if (actual.length !== value.length) throw new Error(`prenume input was truncated or modified ('${value}' -> '${actual}')`);\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:153:29"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:50:10.650Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-151b6-ZZZZZZZZZZZZZZZZZZZZZZZZZZ--firefox\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 29,
                            "line": 153
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-a03241c7a069b9be210d",
                  "file": "numeprenume.spec.ts",
                  "line": 146,
                  "column": 11
                },
                {
                  "title": "prenume invalid: lowercase (\"a\")",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 38,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 8265,
                          "error": {
                            "message": "Error: bug present: invalid value 'a' does NOT trigger red outline",
                            "stack": "Error: bug present: invalid value 'a' does NOT trigger red outline\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:179:17",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 17,
                              "line": 179
                            },
                            "snippet": "\u001b[0m \u001b[90m 177 |\u001b[39m         \u001b[36mconst\u001b[39m hasError \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m hasRedOutline(page\u001b[33m,\u001b[39m \u001b[32m'prenume'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 178 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mhasError) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 179 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`bug present: invalid value '${value}' does NOT trigger red outline`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 180 |\u001b[39m         }\n \u001b[90m 181 |\u001b[39m         expect(hasError)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 182 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 17,
                                "line": 179
                              },
                              "message": "Error: bug present: invalid value 'a' does NOT trigger red outline\n\n  177 |         const hasError = await hasRedOutline(page, 'prenume');\n  178 |         if (!hasError) {\n> 179 |           throw new Error(`bug present: invalid value '${value}' does NOT trigger red outline`);\n      |                 ^\n  180 |         }\n  181 |         expect(hasError).toBe(true);\n  182 |       });\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:179:17"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:50:11.053Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-f5693-renume-invalid-lowercase-a--firefox\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 17,
                            "line": 179
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-4d9a961c9cbbd4c8b577",
                  "file": "numeprenume.spec.ts",
                  "line": 169,
                  "column": 11
                },
                {
                  "title": "prenume invalid: lowercase (\"z\")",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 39,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 7718,
                          "error": {
                            "message": "Error: bug present: invalid value 'z' does NOT trigger red outline",
                            "stack": "Error: bug present: invalid value 'z' does NOT trigger red outline\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:179:17",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 17,
                              "line": 179
                            },
                            "snippet": "\u001b[0m \u001b[90m 177 |\u001b[39m         \u001b[36mconst\u001b[39m hasError \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m hasRedOutline(page\u001b[33m,\u001b[39m \u001b[32m'prenume'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 178 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mhasError) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 179 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`bug present: invalid value '${value}' does NOT trigger red outline`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 180 |\u001b[39m         }\n \u001b[90m 181 |\u001b[39m         expect(hasError)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 182 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 17,
                                "line": 179
                              },
                              "message": "Error: bug present: invalid value 'z' does NOT trigger red outline\n\n  177 |         const hasError = await hasRedOutline(page, 'prenume');\n  178 |         if (!hasError) {\n> 179 |           throw new Error(`bug present: invalid value '${value}' does NOT trigger red outline`);\n      |                 ^\n  180 |         }\n  181 |         expect(hasError).toBe(true);\n  182 |       });\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:179:17"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:50:14.782Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-fa928-renume-invalid-lowercase-z--firefox\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 17,
                            "line": 179
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-5a9e3e7e7af1515cf060",
                  "file": "numeprenume.spec.ts",
                  "line": 169,
                  "column": 11
                },
                {
                  "title": "prenume invalid: diacritic (\"├ó\")",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 40,
                          "parallelIndex": 5,
                          "status": "failed",
                          "duration": 7790,
                          "error": {
                            "message": "Error: bug present: invalid value '├ó' does NOT trigger red outline",
                            "stack": "Error: bug present: invalid value '├ó' does NOT trigger red outline\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:179:17",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 17,
                              "line": 179
                            },
                            "snippet": "\u001b[0m \u001b[90m 177 |\u001b[39m         \u001b[36mconst\u001b[39m hasError \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m hasRedOutline(page\u001b[33m,\u001b[39m \u001b[32m'prenume'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 178 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mhasError) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 179 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`bug present: invalid value '${value}' does NOT trigger red outline`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 180 |\u001b[39m         }\n \u001b[90m 181 |\u001b[39m         expect(hasError)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 182 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 17,
                                "line": 179
                              },
                              "message": "Error: bug present: invalid value '├ó' does NOT trigger red outline\n\n  177 |         const hasError = await hasRedOutline(page, 'prenume');\n  178 |         if (!hasError) {\n> 179 |           throw new Error(`bug present: invalid value '${value}' does NOT trigger red outline`);\n      |                 ^\n  180 |         }\n  181 |         expect(hasError).toBe(true);\n  182 |       });\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:179:17"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:50:15.370Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-38dbd-renume-invalid-diacritic-├ó--firefox\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 17,
                            "line": 179
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-c0992a341d03abf03c36",
                  "file": "numeprenume.spec.ts",
                  "line": 169,
                  "column": 11
                },
                {
                  "title": "prenume invalid: space (\" \")",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 41,
                          "parallelIndex": 8,
                          "status": "failed",
                          "duration": 8297,
                          "error": {
                            "message": "Error: bug present: invalid value ' ' does NOT trigger red outline",
                            "stack": "Error: bug present: invalid value ' ' does NOT trigger red outline\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:179:17",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 17,
                              "line": 179
                            },
                            "snippet": "\u001b[0m \u001b[90m 177 |\u001b[39m         \u001b[36mconst\u001b[39m hasError \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m hasRedOutline(page\u001b[33m,\u001b[39m \u001b[32m'prenume'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 178 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mhasError) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 179 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`bug present: invalid value '${value}' does NOT trigger red outline`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 180 |\u001b[39m         }\n \u001b[90m 181 |\u001b[39m         expect(hasError)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 182 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 17,
                                "line": 179
                              },
                              "message": "Error: bug present: invalid value ' ' does NOT trigger red outline\n\n  177 |         const hasError = await hasRedOutline(page, 'prenume');\n  178 |         if (!hasError) {\n> 179 |           throw new Error(`bug present: invalid value '${value}' does NOT trigger red outline`);\n      |                 ^\n  180 |         }\n  181 |         expect(hasError).toBe(true);\n  182 |       });\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:179:17"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:50:18.172Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-c6a69-ield-prenume-invalid-space--firefox\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 17,
                            "line": 179
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-cf0d6d7ca8a0e96834e5",
                  "file": "numeprenume.spec.ts",
                  "line": 169,
                  "column": 11
                },
                {
                  "title": "prenume invalid: empty (\"\")",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 42,
                          "parallelIndex": 7,
                          "status": "failed",
                          "duration": 8078,
                          "error": {
                            "message": "Error: bug present: invalid value '' does NOT trigger red outline",
                            "stack": "Error: bug present: invalid value '' does NOT trigger red outline\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:179:17",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 17,
                              "line": 179
                            },
                            "snippet": "\u001b[0m \u001b[90m 177 |\u001b[39m         \u001b[36mconst\u001b[39m hasError \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m hasRedOutline(page\u001b[33m,\u001b[39m \u001b[32m'prenume'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 178 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mhasError) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 179 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`bug present: invalid value '${value}' does NOT trigger red outline`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 180 |\u001b[39m         }\n \u001b[90m 181 |\u001b[39m         expect(hasError)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 182 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 17,
                                "line": 179
                              },
                              "message": "Error: bug present: invalid value '' does NOT trigger red outline\n\n  177 |         const hasError = await hasRedOutline(page, 'prenume');\n  178 |         if (!hasError) {\n> 179 |           throw new Error(`bug present: invalid value '${value}' does NOT trigger red outline`);\n      |                 ^\n  180 |         }\n  181 |         expect(hasError).toBe(true);\n  182 |       });\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:179:17"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:50:19.532Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-f50a6-ield-prenume-invalid-empty--firefox\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 17,
                            "line": 179
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-2b20cc65ba7661100528",
                  "file": "numeprenume.spec.ts",
                  "line": 169,
                  "column": 11
                },
                {
                  "title": "prenume invalid: digit (\"3\")",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 43,
                          "parallelIndex": 9,
                          "status": "failed",
                          "duration": 8424,
                          "error": {
                            "message": "Error: bug present: invalid value '3' does NOT trigger red outline",
                            "stack": "Error: bug present: invalid value '3' does NOT trigger red outline\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:179:17",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 17,
                              "line": 179
                            },
                            "snippet": "\u001b[0m \u001b[90m 177 |\u001b[39m         \u001b[36mconst\u001b[39m hasError \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m hasRedOutline(page\u001b[33m,\u001b[39m \u001b[32m'prenume'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 178 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mhasError) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 179 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`bug present: invalid value '${value}' does NOT trigger red outline`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 180 |\u001b[39m         }\n \u001b[90m 181 |\u001b[39m         expect(hasError)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 182 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 17,
                                "line": 179
                              },
                              "message": "Error: bug present: invalid value '3' does NOT trigger red outline\n\n  177 |         const hasError = await hasRedOutline(page, 'prenume');\n  178 |         if (!hasError) {\n> 179 |           throw new Error(`bug present: invalid value '${value}' does NOT trigger red outline`);\n      |                 ^\n  180 |         }\n  181 |         expect(hasError).toBe(true);\n  182 |       });\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:179:17"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:50:20.144Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-7d364-ld-prenume-invalid-digit-3--firefox\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 17,
                            "line": 179
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-5f395ee88c19a81bd4ef",
                  "file": "numeprenume.spec.ts",
                  "line": 169,
                  "column": 11
                },
                {
                  "title": "prenume invalid: symbol (\"!\")",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 44,
                          "parallelIndex": 10,
                          "status": "failed",
                          "duration": 8746,
                          "error": {
                            "message": "Error: bug present: invalid value '!' does NOT trigger red outline",
                            "stack": "Error: bug present: invalid value '!' does NOT trigger red outline\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:179:17",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 17,
                              "line": 179
                            },
                            "snippet": "\u001b[0m \u001b[90m 177 |\u001b[39m         \u001b[36mconst\u001b[39m hasError \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m hasRedOutline(page\u001b[33m,\u001b[39m \u001b[32m'prenume'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 178 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mhasError) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 179 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`bug present: invalid value '${value}' does NOT trigger red outline`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 180 |\u001b[39m         }\n \u001b[90m 181 |\u001b[39m         expect(hasError)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 182 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 17,
                                "line": 179
                              },
                              "message": "Error: bug present: invalid value '!' does NOT trigger red outline\n\n  177 |         const hasError = await hasRedOutline(page, 'prenume');\n  178 |         if (!hasError) {\n> 179 |           throw new Error(`bug present: invalid value '${value}' does NOT trigger red outline`);\n      |                 ^\n  180 |         }\n  181 |         expect(hasError).toBe(true);\n  182 |       });\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:179:17"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:50:20.644Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-7540c-eld-prenume-invalid-symbol--firefox\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 17,
                            "line": 179
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-00aa72af17eaa898ad21",
                  "file": "numeprenume.spec.ts",
                  "line": 169,
                  "column": 11
                },
                {
                  "title": "prenume invalid: too long (\"DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD\")",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 45,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 9049,
                          "error": {
                            "message": "Error: bug present: invalid value 'DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD' does NOT trigger red outline",
                            "stack": "Error: bug present: invalid value 'DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD' does NOT trigger red outline\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:179:17",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 17,
                              "line": 179
                            },
                            "snippet": "\u001b[0m \u001b[90m 177 |\u001b[39m         \u001b[36mconst\u001b[39m hasError \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m hasRedOutline(page\u001b[33m,\u001b[39m \u001b[32m'prenume'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 178 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mhasError) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 179 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`bug present: invalid value '${value}' does NOT trigger red outline`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 180 |\u001b[39m         }\n \u001b[90m 181 |\u001b[39m         expect(hasError)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 182 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 17,
                                "line": 179
                              },
                              "message": "Error: bug present: invalid value 'DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD' does NOT trigger red outline\n\n  177 |         const hasError = await hasRedOutline(page, 'prenume');\n  178 |         if (!hasError) {\n> 179 |           throw new Error(`bug present: invalid value '${value}' does NOT trigger red outline`);\n      |                 ^\n  180 |         }\n  181 |         expect(hasError).toBe(true);\n  182 |       });\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:179:17"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:50:21.406Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-c33cd-DDDDDDDDDDDDDDDDDDDDDDDDDD--firefox\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 17,
                            "line": 179
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-c9814cd5022f13128fe1",
                  "file": "numeprenume.spec.ts",
                  "line": 169,
                  "column": 11
                },
                {
                  "title": "prenume valid: \"A\"",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 58,
                          "parallelIndex": 7,
                          "status": "failed",
                          "duration": 5908,
                          "error": {
                            "message": "Error: missing maxlength attribute on prenume field",
                            "stack": "Error: missing maxlength attribute on prenume field\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:153:29",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 29,
                              "line": 153
                            },
                            "snippet": "\u001b[0m \u001b[90m 151 |\u001b[39m         \u001b[90m// maxlength must be 30 and the input should accept the full value\u001b[39m\n \u001b[90m 152 |\u001b[39m         \u001b[36mconst\u001b[39m maxAttr \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m prenumeField\u001b[33m.\u001b[39mgetAttribute(\u001b[32m'maxlength'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 153 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mmaxAttr) \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'missing maxlength attribute on prenume field'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 154 |\u001b[39m         expect(\u001b[33mNumber\u001b[39m(maxAttr))\u001b[33m.\u001b[39mtoBe(\u001b[35m30\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 155 |\u001b[39m         \u001b[36mconst\u001b[39m actual \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m prenumeField\u001b[33m.\u001b[39minputValue()\u001b[33m;\u001b[39m\n \u001b[90m 156 |\u001b[39m         \u001b[36mif\u001b[39m (actual\u001b[33m.\u001b[39mlength \u001b[33m!==\u001b[39m value\u001b[33m.\u001b[39mlength) \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`prenume input was truncated or modified ('${value}' -> '${actual}')`\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 29,
                                "line": 153
                              },
                              "message": "Error: missing maxlength attribute on prenume field\n\n  151 |         // maxlength must be 30 and the input should accept the full value\n  152 |         const maxAttr = await prenumeField.getAttribute('maxlength');\n> 153 |         if (!maxAttr) throw new Error('missing maxlength attribute on prenume field');\n      |                             ^\n  154 |         expect(Number(maxAttr)).toBe(30);\n  155 |         const actual = await prenumeField.inputValue();\n  156 |         if (actual.length !== value.length) throw new Error(`prenume input was truncated or modified ('${value}' -> '${actual}')`);\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:153:29"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:50:33.291Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-1e5ba-nume-field-prenume-valid-A--webkit\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 29,
                            "line": 153
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-4b699b0bcac909a795e6",
                  "file": "numeprenume.spec.ts",
                  "line": 146,
                  "column": 11
                },
                {
                  "title": "prenume valid: \"YYYYYYYYYYYYYYYYYYYYYYYYYYYYY\"",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 59,
                          "parallelIndex": 9,
                          "status": "failed",
                          "duration": 5695,
                          "error": {
                            "message": "Error: missing maxlength attribute on prenume field",
                            "stack": "Error: missing maxlength attribute on prenume field\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:153:29",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 29,
                              "line": 153
                            },
                            "snippet": "\u001b[0m \u001b[90m 151 |\u001b[39m         \u001b[90m// maxlength must be 30 and the input should accept the full value\u001b[39m\n \u001b[90m 152 |\u001b[39m         \u001b[36mconst\u001b[39m maxAttr \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m prenumeField\u001b[33m.\u001b[39mgetAttribute(\u001b[32m'maxlength'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 153 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mmaxAttr) \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'missing maxlength attribute on prenume field'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 154 |\u001b[39m         expect(\u001b[33mNumber\u001b[39m(maxAttr))\u001b[33m.\u001b[39mtoBe(\u001b[35m30\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 155 |\u001b[39m         \u001b[36mconst\u001b[39m actual \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m prenumeField\u001b[33m.\u001b[39minputValue()\u001b[33m;\u001b[39m\n \u001b[90m 156 |\u001b[39m         \u001b[36mif\u001b[39m (actual\u001b[33m.\u001b[39mlength \u001b[33m!==\u001b[39m value\u001b[33m.\u001b[39mlength) \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`prenume input was truncated or modified ('${value}' -> '${actual}')`\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 29,
                                "line": 153
                              },
                              "message": "Error: missing maxlength attribute on prenume field\n\n  151 |         // maxlength must be 30 and the input should accept the full value\n  152 |         const maxAttr = await prenumeField.getAttribute('maxlength');\n> 153 |         if (!maxAttr) throw new Error('missing maxlength attribute on prenume field');\n      |                             ^\n  154 |         expect(Number(maxAttr)).toBe(30);\n  155 |         const actual = await prenumeField.inputValue();\n  156 |         if (actual.length !== value.length) throw new Error(`prenume input was truncated or modified ('${value}' -> '${actual}')`);\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:153:29"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:50:34.269Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-2dda0-YYYYYYYYYYYYYYYYYYYYYYYYYY--webkit\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 29,
                            "line": 153
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-dd270727deb289a217c2",
                  "file": "numeprenume.spec.ts",
                  "line": 146,
                  "column": 11
                },
                {
                  "title": "prenume valid: \"ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ\"",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 60,
                          "parallelIndex": 10,
                          "status": "failed",
                          "duration": 5603,
                          "error": {
                            "message": "Error: missing maxlength attribute on prenume field",
                            "stack": "Error: missing maxlength attribute on prenume field\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:153:29",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 29,
                              "line": 153
                            },
                            "snippet": "\u001b[0m \u001b[90m 151 |\u001b[39m         \u001b[90m// maxlength must be 30 and the input should accept the full value\u001b[39m\n \u001b[90m 152 |\u001b[39m         \u001b[36mconst\u001b[39m maxAttr \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m prenumeField\u001b[33m.\u001b[39mgetAttribute(\u001b[32m'maxlength'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 153 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mmaxAttr) \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'missing maxlength attribute on prenume field'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 154 |\u001b[39m         expect(\u001b[33mNumber\u001b[39m(maxAttr))\u001b[33m.\u001b[39mtoBe(\u001b[35m30\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 155 |\u001b[39m         \u001b[36mconst\u001b[39m actual \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m prenumeField\u001b[33m.\u001b[39minputValue()\u001b[33m;\u001b[39m\n \u001b[90m 156 |\u001b[39m         \u001b[36mif\u001b[39m (actual\u001b[33m.\u001b[39mlength \u001b[33m!==\u001b[39m value\u001b[33m.\u001b[39mlength) \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`prenume input was truncated or modified ('${value}' -> '${actual}')`\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 29,
                                "line": 153
                              },
                              "message": "Error: missing maxlength attribute on prenume field\n\n  151 |         // maxlength must be 30 and the input should accept the full value\n  152 |         const maxAttr = await prenumeField.getAttribute('maxlength');\n> 153 |         if (!maxAttr) throw new Error('missing maxlength attribute on prenume field');\n      |                             ^\n  154 |         expect(Number(maxAttr)).toBe(30);\n  155 |         const actual = await prenumeField.inputValue();\n  156 |         if (actual.length !== value.length) throw new Error(`prenume input was truncated or modified ('${value}' -> '${actual}')`);\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:153:29"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:50:35.124Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-151b6-ZZZZZZZZZZZZZZZZZZZZZZZZZZ--webkit\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 29,
                            "line": 153
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-e51726b08999f1591442",
                  "file": "numeprenume.spec.ts",
                  "line": 146,
                  "column": 11
                },
                {
                  "title": "prenume invalid: lowercase (\"a\")",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 61,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 6695,
                          "error": {
                            "message": "Error: bug present: invalid value 'a' does NOT trigger red outline",
                            "stack": "Error: bug present: invalid value 'a' does NOT trigger red outline\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:179:17",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 17,
                              "line": 179
                            },
                            "snippet": "\u001b[0m \u001b[90m 177 |\u001b[39m         \u001b[36mconst\u001b[39m hasError \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m hasRedOutline(page\u001b[33m,\u001b[39m \u001b[32m'prenume'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 178 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mhasError) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 179 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`bug present: invalid value '${value}' does NOT trigger red outline`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 180 |\u001b[39m         }\n \u001b[90m 181 |\u001b[39m         expect(hasError)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 182 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 17,
                                "line": 179
                              },
                              "message": "Error: bug present: invalid value 'a' does NOT trigger red outline\n\n  177 |         const hasError = await hasRedOutline(page, 'prenume');\n  178 |         if (!hasError) {\n> 179 |           throw new Error(`bug present: invalid value '${value}' does NOT trigger red outline`);\n      |                 ^\n  180 |         }\n  181 |         expect(hasError).toBe(true);\n  182 |       });\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:179:17"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:50:35.371Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-f5693-renume-invalid-lowercase-a--webkit\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 17,
                            "line": 179
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-9c2b2487e6a649697d3d",
                  "file": "numeprenume.spec.ts",
                  "line": 169,
                  "column": 11
                },
                {
                  "title": "prenume invalid: lowercase (\"z\")",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 62,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 6354,
                          "error": {
                            "message": "Error: bug present: invalid value 'z' does NOT trigger red outline",
                            "stack": "Error: bug present: invalid value 'z' does NOT trigger red outline\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:179:17",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 17,
                              "line": 179
                            },
                            "snippet": "\u001b[0m \u001b[90m 177 |\u001b[39m         \u001b[36mconst\u001b[39m hasError \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m hasRedOutline(page\u001b[33m,\u001b[39m \u001b[32m'prenume'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 178 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mhasError) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 179 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`bug present: invalid value '${value}' does NOT trigger red outline`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 180 |\u001b[39m         }\n \u001b[90m 181 |\u001b[39m         expect(hasError)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 182 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 17,
                                "line": 179
                              },
                              "message": "Error: bug present: invalid value 'z' does NOT trigger red outline\n\n  177 |         const hasError = await hasRedOutline(page, 'prenume');\n  178 |         if (!hasError) {\n> 179 |           throw new Error(`bug present: invalid value '${value}' does NOT trigger red outline`);\n      |                 ^\n  180 |         }\n  181 |         expect(hasError).toBe(true);\n  182 |       });\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:179:17"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:50:36.396Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-fa928-renume-invalid-lowercase-z--webkit\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 17,
                            "line": 179
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-04603f7f0a1a6c8ca0c8",
                  "file": "numeprenume.spec.ts",
                  "line": 169,
                  "column": 11
                },
                {
                  "title": "prenume invalid: diacritic (\"├ó\")",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 63,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 6503,
                          "error": {
                            "message": "Error: bug present: invalid value '├ó' does NOT trigger red outline",
                            "stack": "Error: bug present: invalid value '├ó' does NOT trigger red outline\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:179:17",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 17,
                              "line": 179
                            },
                            "snippet": "\u001b[0m \u001b[90m 177 |\u001b[39m         \u001b[36mconst\u001b[39m hasError \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m hasRedOutline(page\u001b[33m,\u001b[39m \u001b[32m'prenume'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 178 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mhasError) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 179 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`bug present: invalid value '${value}' does NOT trigger red outline`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 180 |\u001b[39m         }\n \u001b[90m 181 |\u001b[39m         expect(hasError)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 182 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 17,
                                "line": 179
                              },
                              "message": "Error: bug present: invalid value '├ó' does NOT trigger red outline\n\n  177 |         const hasError = await hasRedOutline(page, 'prenume');\n  178 |         if (!hasError) {\n> 179 |           throw new Error(`bug present: invalid value '${value}' does NOT trigger red outline`);\n      |                 ^\n  180 |         }\n  181 |         expect(hasError).toBe(true);\n  182 |       });\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:179:17"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:50:37.471Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-38dbd-renume-invalid-diacritic-├ó--webkit\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 17,
                            "line": 179
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-b8b87cc5758f24950cc4",
                  "file": "numeprenume.spec.ts",
                  "line": 169,
                  "column": 11
                },
                {
                  "title": "prenume invalid: space (\" \")",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 64,
                          "parallelIndex": 5,
                          "status": "failed",
                          "duration": 6376,
                          "error": {
                            "message": "Error: bug present: invalid value ' ' does NOT trigger red outline",
                            "stack": "Error: bug present: invalid value ' ' does NOT trigger red outline\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:179:17",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 17,
                              "line": 179
                            },
                            "snippet": "\u001b[0m \u001b[90m 177 |\u001b[39m         \u001b[36mconst\u001b[39m hasError \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m hasRedOutline(page\u001b[33m,\u001b[39m \u001b[32m'prenume'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 178 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mhasError) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 179 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`bug present: invalid value '${value}' does NOT trigger red outline`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 180 |\u001b[39m         }\n \u001b[90m 181 |\u001b[39m         expect(hasError)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 182 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 17,
                                "line": 179
                              },
                              "message": "Error: bug present: invalid value ' ' does NOT trigger red outline\n\n  177 |         const hasError = await hasRedOutline(page, 'prenume');\n  178 |         if (!hasError) {\n> 179 |           throw new Error(`bug present: invalid value '${value}' does NOT trigger red outline`);\n      |                 ^\n  180 |         }\n  181 |         expect(hasError).toBe(true);\n  182 |       });\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:179:17"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:50:38.643Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-c6a69-ield-prenume-invalid-space--webkit\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 17,
                            "line": 179
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-3fb2bf3302dd649a8fbc",
                  "file": "numeprenume.spec.ts",
                  "line": 169,
                  "column": 11
                },
                {
                  "title": "prenume invalid: empty (\"\")",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 65,
                          "parallelIndex": 6,
                          "status": "failed",
                          "duration": 6368,
                          "error": {
                            "message": "Error: bug present: invalid value '' does NOT trigger red outline",
                            "stack": "Error: bug present: invalid value '' does NOT trigger red outline\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:179:17",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 17,
                              "line": 179
                            },
                            "snippet": "\u001b[0m \u001b[90m 177 |\u001b[39m         \u001b[36mconst\u001b[39m hasError \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m hasRedOutline(page\u001b[33m,\u001b[39m \u001b[32m'prenume'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 178 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mhasError) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 179 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`bug present: invalid value '${value}' does NOT trigger red outline`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 180 |\u001b[39m         }\n \u001b[90m 181 |\u001b[39m         expect(hasError)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 182 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 17,
                                "line": 179
                              },
                              "message": "Error: bug present: invalid value '' does NOT trigger red outline\n\n  177 |         const hasError = await hasRedOutline(page, 'prenume');\n  178 |         if (!hasError) {\n> 179 |           throw new Error(`bug present: invalid value '${value}' does NOT trigger red outline`);\n      |                 ^\n  180 |         }\n  181 |         expect(hasError).toBe(true);\n  182 |       });\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:179:17"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:50:39.131Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-f50a6-ield-prenume-invalid-empty--webkit\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 17,
                            "line": 179
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-a52ff892a4ef7419e2e9",
                  "file": "numeprenume.spec.ts",
                  "line": 169,
                  "column": 11
                },
                {
                  "title": "prenume invalid: digit (\"3\")",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 66,
                          "parallelIndex": 11,
                          "status": "failed",
                          "duration": 6362,
                          "error": {
                            "message": "Error: bug present: invalid value '3' does NOT trigger red outline",
                            "stack": "Error: bug present: invalid value '3' does NOT trigger red outline\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:179:17",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 17,
                              "line": 179
                            },
                            "snippet": "\u001b[0m \u001b[90m 177 |\u001b[39m         \u001b[36mconst\u001b[39m hasError \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m hasRedOutline(page\u001b[33m,\u001b[39m \u001b[32m'prenume'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 178 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mhasError) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 179 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`bug present: invalid value '${value}' does NOT trigger red outline`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 180 |\u001b[39m         }\n \u001b[90m 181 |\u001b[39m         expect(hasError)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 182 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 17,
                                "line": 179
                              },
                              "message": "Error: bug present: invalid value '3' does NOT trigger red outline\n\n  177 |         const hasError = await hasRedOutline(page, 'prenume');\n  178 |         if (!hasError) {\n> 179 |           throw new Error(`bug present: invalid value '${value}' does NOT trigger red outline`);\n      |                 ^\n  180 |         }\n  181 |         expect(hasError).toBe(true);\n  182 |       });\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:179:17"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:50:39.915Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-7d364-ld-prenume-invalid-digit-3--webkit\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 17,
                            "line": 179
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-0d252587769fe0493ff4",
                  "file": "numeprenume.spec.ts",
                  "line": 169,
                  "column": 11
                },
                {
                  "title": "prenume invalid: symbol (\"!\")",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 67,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 6502,
                          "error": {
                            "message": "Error: bug present: invalid value '!' does NOT trigger red outline",
                            "stack": "Error: bug present: invalid value '!' does NOT trigger red outline\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:179:17",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 17,
                              "line": 179
                            },
                            "snippet": "\u001b[0m \u001b[90m 177 |\u001b[39m         \u001b[36mconst\u001b[39m hasError \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m hasRedOutline(page\u001b[33m,\u001b[39m \u001b[32m'prenume'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 178 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mhasError) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 179 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`bug present: invalid value '${value}' does NOT trigger red outline`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 180 |\u001b[39m         }\n \u001b[90m 181 |\u001b[39m         expect(hasError)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 182 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 17,
                                "line": 179
                              },
                              "message": "Error: bug present: invalid value '!' does NOT trigger red outline\n\n  177 |         const hasError = await hasRedOutline(page, 'prenume');\n  178 |         if (!hasError) {\n> 179 |           throw new Error(`bug present: invalid value '${value}' does NOT trigger red outline`);\n      |                 ^\n  180 |         }\n  181 |         expect(hasError).toBe(true);\n  182 |       });\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:179:17"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:50:41.256Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-7540c-eld-prenume-invalid-symbol--webkit\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 17,
                            "line": 179
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-b559bcfdd5e1cdb6db06",
                  "file": "numeprenume.spec.ts",
                  "line": 169,
                  "column": 11
                },
                {
                  "title": "prenume invalid: too long (\"DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD\")",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 68,
                          "parallelIndex": 8,
                          "status": "failed",
                          "duration": 6487,
                          "error": {
                            "message": "Error: bug present: invalid value 'DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD' does NOT trigger red outline",
                            "stack": "Error: bug present: invalid value 'DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD' does NOT trigger red outline\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:179:17",
                            "location": {
                              "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                              "column": 17,
                              "line": 179
                            },
                            "snippet": "\u001b[0m \u001b[90m 177 |\u001b[39m         \u001b[36mconst\u001b[39m hasError \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m hasRedOutline(page\u001b[33m,\u001b[39m \u001b[32m'prenume'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 178 |\u001b[39m         \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mhasError) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 179 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`bug present: invalid value '${value}' does NOT trigger red outline`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 180 |\u001b[39m         }\n \u001b[90m 181 |\u001b[39m         expect(hasError)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 182 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                                "column": 17,
                                "line": 179
                              },
                              "message": "Error: bug present: invalid value 'DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD' does NOT trigger red outline\n\n  177 |         const hasError = await hasRedOutline(page, 'prenume');\n  178 |         if (!hasError) {\n> 179 |           throw new Error(`bug present: invalid value '${value}' does NOT trigger red outline`);\n      |                 ^\n  180 |         }\n  181 |         expect(hasError).toBe(true);\n  182 |       });\n    at C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts:179:17"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-18T21:50:41.362Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\test-results\\numeprenume-Nume-and-Prenu-c33cd-DDDDDDDDDDDDDDDDDDDDDDDDDD--webkit\\error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "C:\\Users\\Cor Hazard\\Documents\\GitHub\\github-demo\\tests\\numeprenume.spec.ts",
                            "column": 17,
                            "line": 179
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "df97be4b379c1f915bd8-671fd7326ac3f58d67e3",
                  "file": "numeprenume.spec.ts",
                  "line": 169,
                  "column": 11
                }
              ]
            }
          ]
        }
      ]
    }
  ],
  "errors": [],
  "stats": {
    "startTime": "2025-10-18T21:49:40.352Z",
    "duration": 67715.284,
    "expected": 0,
    "skipped": 0,
    "unexpected": 69,
    "flaky": 0
  }
}
